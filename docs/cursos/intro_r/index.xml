<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Profa. Renata Oliveira</title>
    <link>https://retaoliveira.github.io/cursos/intro_r/</link>
    <description>Recent content in R on Profa. Renata Oliveira</description>
    <generator>Source Themes academia (https://sourcethemes.com/academic/)</generator>
    <language>pt-br</language>
    <copyright>Renata Oliveira {year}</copyright>
    <lastBuildDate>Wed, 05 May 2021 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://retaoliveira.github.io/cursos/intro_r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Abrindo dados no R</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/abrindo_dados/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/abrindo_dados/</guid>
      <description>
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
  &lt;link rel=&#34;stylesheet&#34; href=&#34;https://retaoliveira.github.io/assets/css/custom.css&#34; type=&#34;text/css&#34; /&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#abrindo-dados-no-r&#34;&gt;Abrindo dados no R&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pacotes-no-r&#34;&gt;Pacotes no R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#caminhos-no-r&#34;&gt;Caminhos no R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#readr&#34;&gt;Readr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tibbles&#34;&gt;Tibbles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dados-em-arquivos-editores-de-planilhas&#34;&gt;Dados em arquivos editores de planilhas&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#um-pouco-sobre-donwload-e-manipulação-de-arquivos&#34;&gt;Um pouco sobre donwload e manipulação de arquivos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#voltando-às-planilhas&#34;&gt;Voltando às planilhas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Este tutorial é de autoria do professor Leonardo S. Barone e pode ser encontrado no &lt;a href=&#34;https://github.com/leobarone/cebrap_lab_cetic_programacao_r/blob/master/tutorials/tutorial04.md&#34;&gt;link&lt;/a&gt;. Agradeço pela generosidade em compartilhar.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;abrindo-dados-no-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Abrindo dados no R&lt;/h1&gt;
&lt;p&gt;Neste tutorial vamos cobrir uma série de métodos disponíveis para abrirmos arquivos de texto, editores de planilhas e de outros softwares de análise de dados no R. Vamos dar atenção aos argumentos das funções de forma a solucionar dificuldades de abertura de dados com diferentes características ou em sistemas operacionais variados.&lt;/p&gt;
&lt;div id=&#34;pacotes-no-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Pacotes no R&lt;/h2&gt;
&lt;p&gt;Antes de avançarmos à tarefa principal, vamos aprender um pouco mais sobre pacotes. Já foi destacado diversas vezes que uma das vantagens do R é a existência de uma comunidade produtiva e que desenvolve continuamente novas funcionalidades, tudo em código aberto.&lt;/p&gt;
&lt;p&gt;Para instalarmos um novo pacote de R que esteja disponível no CRAN – “The Comprehensive R Archive Network” – utilizamos a função &lt;em&gt;install.packages&lt;/em&gt;. Veja o exemplo com o pacote &lt;em&gt;beepr&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;beepr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note que o nome do pacote deve estar em parêntese e aspas. Além disso, é possível que você tenha sido perguntada sobre de qual servidor do CRAN você quer baixar o pacote. A escolha em nada muda o resultado, exceto o tempo de duração do download.&lt;/p&gt;
&lt;p&gt;Uma vez que um pacote foi instalado, ele está disponível em seu computador, mas não ainda para uso neste script e sessão R. Apenas depois de executarmos a função &lt;em&gt;library&lt;/em&gt; é que teremos o pacote em nossa “biblioteca” de funções.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(beepr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Você pode dispensar as aspas ao usar a função &lt;em&gt;library&lt;/em&gt;, pois é opcional.&lt;/p&gt;
&lt;p&gt;Se você quiser usar rapidamente apenas uma função de um pacote sem carregá-lo, você pode utilizar a função precedidade por “:” duas vezes e o nome do pacote. Veja o exemplo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beepr::beep()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;caminhos-no-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Caminhos no R&lt;/h2&gt;
&lt;p&gt;Cada opção para importar dados para R depende de informar a R onde procurar no seu disco pelo arquivo. R sempre começa a procurar no ‘diretório de trabalho’. Você pode verificar em qual diretório está trabalhando executando o seguinte comando:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;getwd()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E como eu altero o “wd” (&lt;em&gt;working directory&lt;/em&gt;)?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;setwd(&amp;quot;C:\\User\\Documents&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Simples e muito útil para evitar escrevermos “labirintos de pastas” cada vez que queremos importar dados. Agora só precisamos nos referir ao nome do arquivo (e não a sua pasta) para abrí-lo. É uma boa prática manter todos os arquivos, scripts e saídas importados em uma pasta de projeto bem organizada.&lt;/p&gt;
&lt;p&gt;Um detalhe fundamental para quem usa Windows: os caminhos devem ser escritos com duas barras no lugar de uma, como no exemplo acima. É uma chatice e a melhor solução é mudar definitivamente para Linux e nunca mais pagar por software proprietário.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;readr&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Readr&lt;/h2&gt;
&lt;p&gt;Existem muitas funções para abrir arquivos de dados, mas para simplificar neste curso, vamos nos concentrar em um conjunto de funções do pacote &lt;em&gt;Readr&lt;/em&gt;. O pacote &lt;em&gt;readr&lt;/em&gt;, parte do &lt;em&gt;tidyverse&lt;/em&gt; (conjunto de pacotes com o qual vamos trabalhar), contém funções para abertura de dados ‘retangulares’ (.csv, .tsv, .txt).&lt;/p&gt;
&lt;p&gt;A maneira mais fácil de acessar as funções do &lt;em&gt;Readr&lt;/em&gt; é abrir a biblioteca do &lt;em&gt;tidyverse&lt;/em&gt; (instale-a primeira, se necessário).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Provavelmente a função mais usada no &lt;em&gt;Readr&lt;/em&gt; é &lt;em&gt;read_csv&lt;/em&gt;, que abre arquivos .csv. Em vez de abrir arquivos do nosso computador, também podemos abrir links e, para simplificar, disponibilizamos vários arquivos em nosso repositório do github. Você pode colar o url de cada arquivo no navegador para ver o seu formato antes de executar o código.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file1 &amp;lt;- &amp;quot;https://raw.githubusercontent.com/retaoliveira/relements/main/data/file1.txt&amp;quot;
dados &amp;lt;- read_csv(file1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;dados&lt;/em&gt; deve aperecer como um objeto em seu ‘Environment’. A função &lt;em&gt;read_delim&lt;/em&gt; nos dá mais flexibilidade para lidar com tipos incomuns de arquivos. Por exemplo, podemos especificar o caractere usado para separar as colunas (por padrão, esta é a vírgula em read_csv):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dados &amp;lt;- read_delim(file1, 
                    delim = &amp;quot;,&amp;quot;)

file_semi_colon &amp;lt;- &amp;quot;https://raw.githubusercontent.com/leobarone/ifch_intro_r/master/data/bf_amostra_hp.csv&amp;quot;
dados &amp;lt;- read_delim(file_semi_colon, 
                    delim = &amp;quot;;&amp;quot;)

file_tab &amp;lt;- &amp;quot;https://raw.githubusercontent.com/leobarone/ifch_intro_r/master/data/bf_amostra_ht.csv&amp;quot;
dados &amp;lt;- read_delim(file_tab, 
                    delim = &amp;quot;\t&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O padrão de &lt;em&gt;read_delim&lt;/em&gt; (e &lt;em&gt;read_csv&lt;/em&gt;) é importar a primeira linha como nome das variáveis. Se nossos dados não tiverem um &lt;em&gt;header&lt;/em&gt; (cabeçalho, ou seja, nomes das variáveis na primeira linhas), a primeira linha de dados se torna equivocadamente o nome das variáveis (inclusive os números, que aparecem antecedidos por um “X”). Para corrigir o problema utilizamos o argumento “col_names”, que deve ser igual a “FALSE” para os dados armezenados sem nomes de colunas, por exemplo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file_sem_header &amp;lt;- &amp;quot;https://raw.githubusercontent.com/leobarone/ifch_intro_r/master/data/bf_amostra_nv.csv&amp;quot;
dados &amp;lt;- read_delim(file_sem_header, 
                    col_names = F, 
                    delim = &amp;quot;,&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Além dos valores lógicos, “col_names” também aceita um vetor com novos nomes para as colunas como argumento:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dados &amp;lt;- read_delim(file_sem_header, 
                    col_names = c(&amp;quot;estado&amp;quot;, &amp;quot;municipio_cod&amp;quot;, &amp;quot;municipio_nome&amp;quot;,
                                  &amp;quot;NIS&amp;quot;, &amp;quot;transferido&amp;quot;),
                    delim = &amp;quot;,&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Por vezes, é interessante definir as classes das variáveis a serem importadas, para evitar novas transformações quando os dados forem importados. O argumento &lt;em&gt;col_types&lt;/em&gt; deve ser uma sequência de caracteres onde “c” = “character”, “d” = “double”, “l” = “logical” e “i” = “integer”. Por exemplo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dados &amp;lt;- read_delim(file1, 
                    delim = &amp;quot;,&amp;quot;, 
                    col_types = &amp;quot;cicid&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Perceba que quando abrimos os dados sem especificar o tipo da coluna, a função &lt;em&gt;read_csv&lt;/em&gt; tenta identificá-los.&lt;/p&gt;
&lt;p&gt;Uma complexidade de abertura de dados brasileiros é o uso da vírgula como separador decimal e o ponto para indicar milhares. Temos que especificar no argumento &lt;em&gt;locale&lt;/em&gt; essas diferenças.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dados &amp;lt;- read_delim(file1, 
                    delim = &amp;quot;,&amp;quot;, 
                    locale = locale(decimal_mark=&amp;quot;,&amp;quot;,grouping_mark=&amp;quot;.&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Também podemos usar &lt;em&gt;locale&lt;/em&gt; para especificar o formato da hora, o formato da data e o encoding do arquivo que estamos lendo.&lt;/p&gt;
&lt;p&gt;Finalmente, é comum termos problemas para abrir arquivos que contenham caracteres especiais, pois há diferentes formas do computador transformar 0 e 1 em vogais acentuadas, cecedilha, etc. O “encoding” de cada arquivo varia de acordo com o sistema operacional e aplicativo no qual foi gerado.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dados &amp;lt;- read_delim(file1, 
                    delim = &amp;quot;,&amp;quot;, 
                    locale = locale(encoding=&amp;#39;latin1&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para resolver este problema, informamos ao R o parâmetro &lt;em&gt;encoding&lt;/em&gt; dentro do &lt;em&gt;locale&lt;/em&gt;, que indica qual é o “encoding” esperado do arquivo. Infelizmente não há formas automáticas infalíveis de descobrir o “encoding” de um arquivo e é preciso conhecer como foi gerado – seja por que você produziu o arquivo ou por que você teve acesso à documentação – ou partir para tentativa e erro. Alguns “encodings” comuns são “latin1”, “latin2” e “utf8”, mas há diversos outros. Como arquivo com o qual estamos trabalhando não contém caracteres especiais, não é preciso fazer nada.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tibbles&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tibbles&lt;/h2&gt;
&lt;p&gt;Se inspecionarmos o objeto criado por qualquer uma das operações acima, &lt;em&gt;dados&lt;/em&gt; parecem um pouco diferentes do que vimos antes. &lt;em&gt;dados&lt;/em&gt; é um data.frame, mas também tem alguns característicos adicionais que facilitam o nosso trabalho. Ele se chama um &lt;em&gt;tibble&lt;/em&gt; (um objeto pode ser de mais de uma clase). Observe que não utilizamos &lt;em&gt;head&lt;/em&gt; para imprimir as primeiras linhas. Essa é uma característica de &lt;em&gt;tibbles&lt;/em&gt;: o output contém uma fração do banco, a informação sobre número de linhas e colunas, e os tipos de cada variável abaixo dos nomes das colunas. Você pode ler mais sobre &lt;em&gt;tibbles&lt;/em&gt; &lt;a href=&#34;https://cran.r-project.org/web/packages/tibble/vignettes/tibble.html&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dados-em-arquivos-editores-de-planilhas&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dados em arquivos editores de planilhas&lt;/h2&gt;
&lt;p&gt;Editores de planilha são, em geral, a primeira ferramenta de análise de dados que aprendemos. Diversas organizações disponibilizam (infelizmente) seus dados em formato .xls ou .xlsx e muitos pesquisadores utilizam editores de planilha para construir bases de dados.&lt;/p&gt;
&lt;p&gt;Vamos ver como obter dados em formato .xls ou .xlsx diretamente, sem precisar abrir os arquivos e exportá-los para um formato de texto.&lt;/p&gt;
&lt;p&gt;Há dois bons pacotes com funções para dados em editores de planilha: &lt;em&gt;readxl&lt;/em&gt; e &lt;em&gt;gdata&lt;/em&gt;. Vamos trabalhar apenas com o primeiro, mas convém conhecer o segundo se você for trabalhar constantemente com planilhas e quiser editá-las, e não só salvá-las. &lt;em&gt;readxl&lt;/em&gt; também é parte do &lt;em&gt;tidyverse&lt;/em&gt; mas temos que abri a biblioteca direitamente. Importe o pacote:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readxl)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;um-pouco-sobre-donwload-e-manipulação-de-arquivos&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Um pouco sobre donwload e manipulação de arquivos&lt;/h3&gt;
&lt;p&gt;Nosso exemplo será a Pesquisa Perfil dos Municípios Brasileiros de 2005, produzida pelo IBGE e apelidade de MUNIC. Diferentemente das demais funções deste tutorial, precisamos baixar o arquivo para o computador e acessá-lo localmente. Faça o download diretamente do &lt;a href=&#34;ftp://ftp.ibge.gov.br/Perfil_Municipios/2005/base_MUNIC_2005.zip&#34;&gt;site do IBGE&lt;/a&gt; e descompacte. Ou, mais interessante ainda, vamos automatizar o download e descompactação do arquivo (aviso: pode dar erro no Windows e tentaremos corrigir na hora – use Linux!).&lt;/p&gt;
&lt;p&gt;Em primeiro lugar, vamos guardar o endereço url do arquivo em um objeto e fazer o download. Note que na função &lt;em&gt;download.file&lt;/em&gt; o primeiro argumento é o url e o segundo é o nome do arquivo que será salvo.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;url_arquivo &amp;lt;- &amp;quot;ftp://ftp.ibge.gov.br/Perfil_Municipios/2005/base_MUNIC_2005.zip&amp;quot;
download.file(url_arquivo, &amp;quot;temp.zip&amp;quot;, quiet = F)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O argumento “quiet = F” serve para não imprimirmos no console “os números” do download (pois o tutorial ficaria poluído), mas você pode retirá-lo ou alterá-lo caso queira ver o que acontece.&lt;/p&gt;
&lt;p&gt;Com &lt;em&gt;unzip&lt;/em&gt;, vamos extrair o conteúdo da pasta:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unzip(&amp;quot;temp.zip&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use &lt;em&gt;list.files&lt;/em&gt; para ver todos os arquivos que estão na sua pasta caso você não saiba o nome do arquivo baixado. No nosso caso utilizaremos o arquivo “Base 2005.xls”&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;list.files()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos aproveitar e excluir nosso arquivo .zip temporário:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file.remove(&amp;quot;temp.zip&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;voltando-às-planilhas&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Voltando às planilhas&lt;/h2&gt;
&lt;p&gt;Para não repetir o nome do arquivo diversas vezes, vamos criar o objeto “arquivo” que contém o endereço do arquivo no seu computador (ou só o nome do arquivo entre aspas se você tivê-lo no seu wd):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;arquivo &amp;lt;- &amp;quot;Base 2005.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Com &lt;em&gt;excel_sheets&lt;/em&gt; examinamos quais são as planilhas existentes do arquivo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;excel_sheets(arquivo)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No caso, temos 11 planilhas diferentes (e um bocado de mensagens de erro estranhas). O dicionário, para quem já trabalhou alguma vez com a MUNIC, não é uma base de dados, apenas textos espalhados entre células. As demais, no entanto, têm formato adequado para &lt;em&gt;data frame&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Vamos importar os dados da planilha “Variáveis externas”. As duas maneiras abaixo se equivalem:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 1
transporte &amp;lt;- read_excel(arquivo, &amp;quot;Variáveis externas&amp;quot;)

# 2
transporte &amp;lt;- read_excel(arquivo, 11)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A função &lt;em&gt;read_excel&lt;/em&gt; aceita os argumentos “col_names” e “col_types” tal como as funções de importação do pacote &lt;em&gt;readr&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Instalação de R, RStudio e Git</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/install/</link>
      <pubDate>Sat, 26 Dec 2020 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/install/</guid>
      <description>&lt;h3 id=&#34;r&#34;&gt;R&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/bin/windows/base/&#34;&gt;Baixar e instalar o R&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No link acima é apresentado o processo de instalação para Windows. No mesmo site é possível encontrar procedimentos de instalação para outros sistemas operacionais.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Links adicionais&lt;/strong&gt;
&lt;a href=&#34;https://rpubs.com/cassiorampinelli/488999&#34;&gt;Visão geral e primeiros passos com R e RStudio&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;rstudio&#34;&gt;RStudio&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://rstudio.com/products/rstudio/download/&#34;&gt;Baixar e instalar o RStudio&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No link acima é apresentado o processo de instalação para Windows. No mesmo site é possível encontrar procedimentos de instalação para outros sistemas operacionais.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;git&#34;&gt;Git&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;Baixar e instalar o Git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No link acima é apresentado o processo de instalação do Git. Atenção às diferenças de arquivos e procedimentos de instalação para diferentes sistemas operacionais.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Nesse &lt;a href=&#34;https://www.curso-r.com/material/instalacao/&#34;&gt;site&lt;/a&gt; você encontra detalhes sobre a instalação do R e do RStudio e sobre a instalação de pacotes do R.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;os-vídeos-são-um-suporte-bacana-para-começarem-a-utilizarem-o-r&#34;&gt;Os vídeos são um suporte bacana para começarem a utilizarem o R.&lt;/h3&gt;
&lt;h4 id=&#34;introdução-conceitual-ao-r&#34;&gt;Introdução conceitual ao R&lt;/h4&gt;
&lt;iframe width=&#34;1147&#34; height=&#34;645&#34; src=&#34;https://www.youtube.com/embed/iBgtV3oJYv0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h4 id=&#34;instalar-o-r&#34;&gt;Instalar o R&lt;/h4&gt;
&lt;iframe width=&#34;1147&#34; height=&#34;645&#34; src=&#34;https://www.youtube.com/embed/G03TwotgPQ8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h4 id=&#34;instalar-o-rstudio&#34;&gt;Instalar o RStudio&lt;/h4&gt;
&lt;iframe width=&#34;1147&#34; height=&#34;645&#34; src=&#34;https://www.youtube.com/embed/aeK6-kPhofk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h4 id=&#34;instalar-pacotes-no-r&#34;&gt;Instalar pacotes no R&lt;/h4&gt;
&lt;iframe width=&#34;1147&#34; height=&#34;645&#34; src=&#34;https://www.youtube.com/embed/lfwMneERUEU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Conhecendo o R</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/intro_r/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/intro_r/</guid>
      <description>
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tldr&#34;&gt;TL;DR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r-o-que-é-o-r&#34;&gt;R? O que é o R?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#conhecendo-o-r&#34;&gt;Conhecendo o R&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#interface-e-funcionalidades&#34;&gt;Interface e funcionalidades&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#definições-básicas&#34;&gt;Definições básicas&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tipos-de-arquivos-no-r&#34;&gt;Tipos de arquivos no R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#local-de-trabalho&#34;&gt;Local de trabalho&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variáveis-funções-e-packages&#34;&gt;Variáveis, funções e &lt;em&gt;packages&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r-como-calculadora&#34;&gt;R como calculadora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#utilizando-variáveis&#34;&gt;Utilizando variáveis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tipos-de-dados-no-r&#34;&gt;Tipos de dados no R&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#character&#34;&gt;Character&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#numeric&#34;&gt;Numeric&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#logical&#34;&gt;Logical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fatores&#34;&gt;Fatores&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tipos-de-classes-no-r&#34;&gt;Tipos de classes no R&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#vetores&#34;&gt;Vetores&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#sequências&#34;&gt;Sequências&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#operações-matemáticas-com-vetores&#34;&gt;Operações matemáticas com vetores&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nomes-do-vetor&#34;&gt;Nomes do vetor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#classes-dos-vetores-atômicos&#34;&gt;Classes dos vetores atômicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#operações-entre-vetores&#34;&gt;Operações entre vetores&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#subconjunto-de-um-vetor---parte-1&#34;&gt;Subconjunto de um vetor - parte 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#soma-média-e-estatísticas-descritivas-dos-elementos-de-um-vetor&#34;&gt;Soma, média e estatísticas descritivas dos elementos de um vetor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#subconjunto-de-um-vetor---parte-2&#34;&gt;Subconjunto de um vetor - parte 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#listas&#34;&gt;Listas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#matrizes&#34;&gt;Matrizes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dataframes&#34;&gt;Dataframes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#do-editor-de-planilhas-ao-r---parte-1&#34;&gt;Do editor de planilhas ao R - parte 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;tldr&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;TL;DR&lt;/h1&gt;
&lt;p&gt;Nessa seção apresentamos alguns conceitos importantes para que a utilização do &lt;code&gt;R&lt;/code&gt; seja mais amigável! Algumas informações importantes que são detalhadas a seguir:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;O &lt;code&gt;RStudio&lt;/code&gt; é uma interface para uso do &lt;code&gt;R&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;O &lt;code&gt;R&lt;/code&gt; é sensível a caracteres maiúsculos e minúsculos.&lt;/li&gt;
&lt;li&gt;Marcador de decimal para o R é &lt;code&gt;.&lt;/code&gt;, mas pode ser configurado conforme arquivo.&lt;/li&gt;
&lt;li&gt;O &lt;code&gt;R&lt;/code&gt; é estruturado em &lt;code&gt;package::função(objeto, parâmetros))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Para utilizar pacotes, precisamos instalar (&lt;code&gt;install.packages(&#34;package&#34;)&lt;/code&gt;), carregar (&lt;code&gt;library(&#34;package&#34;)&lt;/code&gt;) e chamar as funções.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;As funções &lt;code&gt;getwd()&lt;/code&gt;, &lt;code&gt;dir()&lt;/code&gt; e &lt;code&gt;setwd()&lt;/code&gt; ajudam a organizar o trabalho.&lt;/li&gt;
&lt;li&gt;O &lt;code&gt;R&lt;/code&gt; funciona como calculadora&lt;/li&gt;
&lt;li&gt;Para atribuir variáveis (objetos) ao ambiente de trabalho, você pode usar tanto &lt;code&gt;&amp;lt;-&lt;/code&gt; como &lt;code&gt;=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Os tipos de dados mais comuns são &lt;code&gt;character&lt;/code&gt;, &lt;code&gt;numeric&lt;/code&gt;, &lt;code&gt;factor&lt;/code&gt;e &lt;code&gt;logical&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Para fazer a conversão entre tipos de dados, podemos utilizar funções com a estrutura &lt;code&gt;as.tipo(objeto)&lt;/code&gt;. Para verificar qual o tipo de dados, a função é análoga, mas &lt;code&gt;is.tipo(objeto)&lt;/code&gt;. Exemplos: &lt;code&gt;as.logical(x)&lt;/code&gt; e &lt;code&gt;is.logical(x)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;As classes de organização dos dados mais comuns são &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;matrix&lt;/code&gt; e &lt;code&gt;dataframe&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Parênteses são utilizados para delimitar funções e objetos/parâmetros. Colchetes são utilizados para delimitar índices de posição.&lt;/li&gt;
&lt;li&gt;Existem pacotes no R que possuem bases de dados para aprendizagem. O mais conhecido pode ser obtido por &lt;code&gt;data(mtcars)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Algumas funções interessantes para conhecermos e inspecionar inicialmente os dados são:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;head(mtcars)&lt;/code&gt; - apresenta as seis primeiras linhas do banco de dados&lt;/li&gt;
&lt;li&gt;&lt;code&gt;str(mtcars)&lt;/code&gt; - mostra os tipos de variáveis e a estrutura do dado&lt;/li&gt;
&lt;li&gt;&lt;code&gt;class(mtcars)&lt;/code&gt; - mostra a classe da base de dados&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dim(mtcars)&lt;/code&gt; - mostra a dimensão do objeto&lt;/li&gt;
&lt;li&gt;&lt;code&gt;names(mtcars)&lt;/code&gt; - mostra os nomes das variáveis (colunas)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;A função &lt;code&gt;c()&lt;/code&gt; permite a construção de vetores por meio alocação de valores em posições distintas de vetores.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;r-o-que-é-o-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R? O que é o R?&lt;/h1&gt;
&lt;div id=&#34;conhecendo-o-r&#34; class=&#34;section level2 tabset tabset-fade tabset-pills&#34;&gt;
&lt;h2&gt;Conhecendo o R&lt;/h2&gt;
&lt;div id=&#34;interface-e-funcionalidades&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Interface e funcionalidades&lt;/h3&gt;
&lt;p&gt;Para uso do R no ambiente RStudio, é inicialmente necessário entender o seu funcionamento. O R é uma linguagem de programação, em plataforma open source, desenvolvida para análise de dados. SEJAM BEM VINDOS!&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/allison_horst/welcome_to_rstats_twitter.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Bem vindo&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Em um primeiro momento, o conjunto R + RStudio parece pouco amigável, mas com o tempo, é impossível não apaixonar-se pelas infinitas possibilidades que temos ao utilizar o R.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/allison_horst/r_first_then.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Ódio x amor&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A comunidade do R é bastante ampla e colaborativa. Assim: BUSQUE AJUDA!!!!!&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/allison_horst/code_hero.jpg&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Suporte&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;definições-básicas&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Definições básicas&lt;/h1&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;37%&#34; /&gt;
&lt;col width=&#34;62%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Termos&lt;/th&gt;
&lt;th&gt;Definição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Script&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Os scripts são arquivos do R com comandos a serem executados. Para rodar um comando digitado no painel de edição dos Scripts ou do arquivo .Rmd do RStudio no Windows, basta fazer: &lt;code&gt;Ctrl+Enter&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Packages&lt;/code&gt; ou &lt;code&gt;pacotes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;São um conjunto de funções organizadas em um arquivo que pode ser obtido em diferentes repositórios. Para utilização dos pacotes, é necessário instalá-los e, posteriormente, carregá-los na sessão por meio do comando &lt;code&gt;library&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;funções&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;São códigos que determina um algoritmo computacional e que têm diferentes objetivos. Pode haver mais de uma função para o mesmo objetivo. As funções são estruturadas por meio de um comando básico e parâmetros/argumentos que são incluídos entre parênteses após a função.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;objeto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Objetos no R são elementos aos quais são aplicadas as funções&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Console&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;É o espaço no ambiente R onde você digita e roda os comandos do R. É a janela principal, onde é possível digitar os comandos, vizualizar os resultados e mensagens de alerta e mensagens de erros. Nesse ambiente, a seta (&amp;gt;) indica que o R esta pronto para receber um comando; sinal de mais (+) indica que o comando da linha anterior ainda não esta completo, faltando algo para o comando ser executado. A ausência de um desses dois simbólos (&amp;gt; ou +) indica que o R ainda não finalizou o processo do comando anterior. Os resultados de uma função são apresentados entre símbolos de cochetes ([]).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Terminal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;É o espaço onde você digita e roda comandos do sistema (Windows, por exemplo)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;RMarkdown&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Linguagem de texto do R&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;RStudio&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;É uma IDE (Integrated Development Envirnonment) que permite uma interface gráfica amigável com os usuários.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Help&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Janela onde são mostrados os textos de ajuda.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Plot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Janela reservada para os resultados gráficos.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;History&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Lista o histórico dos comandos já executados.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Environment&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Painel exclusivo do RStudio que lista os objetos criados na área de trabalho (workspace).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Painel exclusivo do RStudio, que lista os arquivos do computador. É semelhante ao gerenciador de arquivos padrão do sistema operacional.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div id=&#34;tipos-de-arquivos-no-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tipos de arquivos no R&lt;/h2&gt;
&lt;p&gt;Os principais tipos de arquivos gerados por meio do &lt;code&gt;R&lt;/code&gt; são:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Extensão&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;.R&lt;/td&gt;
&lt;td&gt;Usado para salvar &lt;code&gt;scripts&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;.RData&lt;/td&gt;
&lt;td&gt;Usado para salvar os &lt;code&gt;objetos&lt;/code&gt; da área de trabalho (workspace).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;.Rhistory&lt;/td&gt;
&lt;td&gt;Usado para salvar o &lt;code&gt;histórico dos comandos&lt;/code&gt; executados.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;.Rmd&lt;/td&gt;
&lt;td&gt;Formato para salvar arquivos em &lt;code&gt;RMarkdown&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;local-de-trabalho&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Local de trabalho&lt;/h2&gt;
&lt;p&gt;O diretório de trabalho padrão é aquele ao qual o R foi associado. Entretanto, pode ser alterado, sem qualquer mudanças nos objetos da área de trabalho.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/allison_horst/cracked_setwd.png&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;getwd() # Mostrar o diretório de trabalho atual
dir() # Listar os arquivos do diretório
setwd() # Mudar o diretório de trabalho&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;É possivel salvar a área de trabalho inteira e carregar em outro momento.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ls() # Listar os objetos da área de trabalho
save.image(&amp;quot;meu_workspace.RData&amp;quot;) # Salvar área de trabalho
load(&amp;quot;meu_workspace.RData&amp;quot;) # Carregar área de trabalho&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;variáveis-funções-e-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Variáveis, funções e &lt;em&gt;packages&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Sua estrutura fundamenta-se em uma grande variedade de ferramentas quantitativas, organizadas por meio de &lt;strong&gt;objetos&lt;/strong&gt;, &lt;strong&gt;funções&lt;/strong&gt; e &lt;strong&gt;packages&lt;/strong&gt;. A instalação &lt;code&gt;base&lt;/code&gt; do R já contempla uma série de funções e &lt;em&gt;packages&lt;/em&gt;. &lt;em&gt;Packages&lt;/em&gt; adicionais podem ser instalados quando for necessário ou interessante. Para instalação de &lt;em&gt;packages&lt;/em&gt;, utiliza-se a função &lt;code&gt;install.packages()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A priori, instale os seguintes pacotes no seu computador:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(c(&amp;quot;rmarkdown&amp;quot;, &amp;quot;knitr&amp;quot;, &amp;quot;dsbox&amp;quot;, &amp;quot;tidyverse&amp;quot;, &amp;quot;coronavirus&amp;quot;, &amp;quot;lubridate&amp;quot;, &amp;quot;glue&amp;quot;, &amp;quot;scales&amp;quot;, &amp;quot;ggrepel&amp;quot;, &amp;quot;DT&amp;quot;, &amp;quot;flexdashboard&amp;quot;, &amp;quot;blogdown&amp;quot;, &amp;quot;bookdown&amp;quot;, &amp;quot;pagedown&amp;quot;, &amp;quot;xaringan&amp;quot;, &amp;quot;xaringanthemer&amp;quot;, &amp;quot;janitor&amp;quot;, &amp;quot;jsonlite&amp;quot;, &amp;quot;kableExtra&amp;quot;, &amp;quot;leaflet&amp;quot;, &amp;quot;officedown&amp;quot;, &amp;quot;openxlsx&amp;quot;, &amp;quot;readr&amp;quot;, &amp;quot;readxl&amp;quot;, &amp;quot;devtools&amp;quot;, &amp;quot;remotes&amp;quot;, &amp;quot;swirl&amp;quot;, &amp;quot;stringr&amp;quot;, &amp;quot;tmap&amp;quot;, &amp;quot;tmapstool&amp;quot;, &amp;quot;rvest&amp;quot;, &amp;quot;viridis&amp;quot;, &amp;quot;installr&amp;quot;, &amp;quot;distill&amp;quot;, &amp;quot;rticles&amp;quot;, &amp;quot;data.table&amp;quot;, &amp;quot;ggplot2&amp;quot;, &amp;quot;hrbrthemes&amp;quot;, &amp;quot;plotly&amp;quot;, &amp;quot;learnr&amp;quot;, &amp;quot;prettydoc&amp;quot;, &amp;quot;corrplot&amp;quot;, &amp;quot;tufte&amp;quot;, &amp;quot;ggpubr&amp;quot;, &amp;quot;sf&amp;quot;, &amp;quot;htmlwidgets&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ao longo do curso chamaremos as bibliotecas para que possamos implementar as funções.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;r-como-calculadora&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R como calculadora&lt;/h1&gt;
&lt;p&gt;No &lt;code&gt;R&lt;/code&gt; você pode fazer cálculos simples usando o console.&lt;/p&gt;
&lt;p&gt;R serve como calculadora é bastante simples realizar operações matemáticas.&lt;/p&gt;
&lt;p&gt;Soma:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;42 + 84&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 126&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Subtração:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;84 - 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 42&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Multiplicação&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;42 * 2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 84&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Divisão:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;42 / 6&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 7&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Potência:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;2 ^ 5&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 32&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Divisão inteira (sem resto):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;42 %/% 5&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Resto da divisão:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;42 %% 5&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;utilizando-variáveis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Utilizando variáveis&lt;/h1&gt;
&lt;p&gt;Nos exemplos acima realizamos operações bastante simples sem usar objetos, ou, como costumamos chamar, variáveis.&lt;/p&gt;
&lt;p&gt;Vamos criar uma variável “x” com o valor 42. Ao criar uma variável que armazena apenas um número, estamos criando um vetor atômico (pois vetores atômicos são os vetores de tamanho 1).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- 42&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lembre-se: podemos usar o “&amp;lt;-” ou “=” para fazermos uma atribuição:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x = 42&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No entanto, vale a pena usar “&amp;lt;-” para não confundir os usos de “=”, que também é usado para estabelecer valores nos argumentos de uma função.&lt;/p&gt;
&lt;p&gt;Podemos imprimir o valor de uma variável no console simplesmente digitando seu nome:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 42&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Em várias outras linguagens, e em R inclusive, usa-se a função &lt;em&gt;print&lt;/em&gt; para imprimir os valores de uma variável:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 42&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quando usar print? Veremos no futuro que, dependendo da situação (por exemplo, dentro de funções), é preciso explicitar que queremos “imprimir” algo, e, nestes casos, usamos a função &lt;em&gt;print&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Vamos criar mais uma variável, y, e fazer operações com variáveis:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y &amp;lt;- 5
x + y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 47&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x - y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 37&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x / y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8.4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x * y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 210&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos armazenar o resultado de uma operação matemática em uma variável. Veja os exemplos:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;z1 &amp;lt;- 42 / 3
z2 &amp;lt;- x + y
z3 &amp;lt;- ((x / 5 ) * 9) + 32&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Veja que na última operação utilizamos diversos parênteses. As regras para o uso de parênteses no R em operações matemáticas são semelhantes às da “aritmética de papel e caneta”. Os parênteses são executados sempre de dentro para fora. Aliás, essa regra vale em geral no R, ou seja, para aplicação de quaisquer funções, e não apenas para as operações matemáticas.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tipos-de-dados-no-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Tipos de dados no R&lt;/h1&gt;
&lt;p&gt;No R, os dados são organizados por meio de uma estrutura hierárquica de tipos de dados que podem ser utilizados para armazenar valores em diferentes estruturas. Cada tipo de dado pode ser associado com uma função de teste e uma função de conversão.&lt;/p&gt;
&lt;p&gt;A função de teste retorna sempre &lt;code&gt;TRUE&lt;/code&gt; ou &lt;code&gt;FALSE&lt;/code&gt;, pois é uma &lt;code&gt;função lógica&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A função de conversão, quando possível, transforma os dados em diferentes tipos.&lt;/p&gt;
&lt;p&gt;Funções de teste apresentam a estrutura &lt;code&gt;is.character()&lt;/code&gt; e funções de conversão são &lt;code&gt;as.character()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Neste curso não detalharemos todos os tipos de dados, mas apresentaremos apenas os mais importantes para a análise de dados em caráter exploratório. No blog, temos diversas sugestões de tutoriais e documentação geral que contempla todos os tipos de dados e capacidade de interoperabilidade do R.&lt;/p&gt;
&lt;div id=&#34;character&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Character&lt;/h3&gt;
&lt;p&gt;Variáveis &lt;code&gt;character&lt;/code&gt; são aquelas que contém texto. Para designar uma variável como texto, precisamos colocar seus valores entre aspas. Dados do tipo texto são comuns em variáveis categóricas.&lt;/p&gt;
&lt;p&gt;Experimente:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;d &amp;lt;- &amp;quot;texto&amp;quot;
is.character(d)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;numeric&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Numeric&lt;/h3&gt;
&lt;p&gt;Dados &lt;code&gt;numeric&lt;/code&gt; são números. A função &lt;code&gt;numeric&lt;/code&gt; pode ser utilizada para gerar um vetor com elementos numéricos com valor 0.&lt;/p&gt;
&lt;p&gt;Faça:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Criar vetor de cinco posições com valores 0
numeric(5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0 0 0 0 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Gera valor character
e &amp;lt;- &amp;quot;1980&amp;quot;

# Teste
is.numeric(e)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Conversão
f &amp;lt;- as.numeric(&amp;quot;1980&amp;quot;)

# Teste
is.numeric(f)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;logical&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Logical&lt;/h3&gt;
&lt;p&gt;A função &lt;code&gt;logical&lt;/code&gt; gera um vetor lógico com o tamanho desejado e por padrão, cada elemento do vetor recebe o valor &lt;code&gt;FALSE&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;logical(3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE FALSE FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Conversão
as.logical(c(7,5,0))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  TRUE  TRUE FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# TRUE e FALSE podem ser convertidos em 1 ou 0
as.logical(c(7,5,0))*1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1 1 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Os valores no vetor que são diferentes de &lt;em&gt;zero&lt;/em&gt;, recebem o valor &lt;code&gt;TRUE&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A função &lt;strong&gt;&lt;code&gt;c&lt;/code&gt;&lt;/strong&gt;(&lt;em&gt;combine&lt;/em&gt;) é utilizada para composição de um vetor, combinando valores identificados por índices.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;fatores&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Fatores&lt;/h2&gt;
&lt;p&gt;Neste tutorial, falamos rapidamente de classe e o assunto pareceu relativamente simples. Vamos complicá-lo com um dos aspectos mais confusos da linguagem R: a classe de vetores &lt;strong&gt;factor&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;factor&lt;/strong&gt; é, basicamente, a classe de vetores em R utilizada para lidar com dados categóricos, nominais ou ordinais. Em vez de gastarmos tinta tentando entendê-los de forma abstrata, vamos a um exemplo.&lt;/p&gt;
&lt;p&gt;Suponhamos que temos um vetor de texto que representa uma variável categórica que pode receber dois valores, “sim” e “nao”.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;yes_no &amp;lt;- c(&amp;quot;sim&amp;quot;, &amp;quot;nao&amp;quot;, &amp;quot;nao&amp;quot;, &amp;quot;nao&amp;quot;, &amp;quot;sim&amp;quot;, &amp;quot;nao&amp;quot;)
print(yes_no)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;sim&amp;quot; &amp;quot;nao&amp;quot; &amp;quot;nao&amp;quot; &amp;quot;nao&amp;quot; &amp;quot;sim&amp;quot; &amp;quot;nao&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(yes_no)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos usar a função &lt;em&gt;factor&lt;/em&gt; para gerar o vetor “f_yes_no” e observar o resultado:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f_yes_no &amp;lt;- factor(yes_no)
print(f_yes_no)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] sim nao nao nao sim nao
## Levels: nao sim&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note que não temos mais aspas nos valores impressos do vetor de fatores. Além disso, ele vem acompanhado de uma nova informação: “levels”, ou niveis.&lt;/p&gt;
&lt;p&gt;Basicamente, “factors” são vetores numéricos cujos valores estão associados a um rótulo. Os “levels” são esses pares de código numérico + rótulo.&lt;/p&gt;
&lt;p&gt;Se tentamos transformar em números o vetor de fatores, veja o que obtemos:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;as.numeric(f_yes_no)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2 1 1 1 2 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1 e 2 são os códigos numéricos gerados autormaticamente para “nao” e “sim”, respectivamente. O critério para atribuir valores foi a ordem alfabética dos textos transformados em fatores.&lt;/p&gt;
&lt;p&gt;Podemos investigar os níveis de um vetor de fatores com a função &lt;em&gt;levels&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;levels(f_yes_no)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;nao&amp;quot; &amp;quot;sim&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E também podemos alterá-los, tal como fazemos com os nomes dos elementos de um vetor:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;levels(f_yes_no) &amp;lt;- c(&amp;quot;No&amp;quot;, &amp;quot;Sim&amp;quot;)
print(f_yes_no)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] Sim No  No  No  Sim No 
## Levels: No Sim&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tudo bem até agora?&lt;/p&gt;
&lt;p&gt;E se os níveis de uma variável forem ordenados? Vejamos um exemplo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tamanho &amp;lt;- c(&amp;quot;alto&amp;quot;, &amp;quot;baixo&amp;quot;, &amp;quot;baixo&amp;quot;, &amp;quot;medio&amp;quot;, &amp;quot;alto&amp;quot;, &amp;quot;baixo&amp;quot;, &amp;quot;medio&amp;quot;)
f_tamanho &amp;lt;- factor(tamanho)
print(f_tamanho)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] alto  baixo baixo medio alto  baixo medio
## Levels: alto baixo medio&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como o R segue o ordenamento alfabético, os códigos numéricos 1, 2 e 3 estão associados a “alto”, “baixo” e “medio”, respectivamente. Mas qual é o problema de não ordenarmos? Veja abaixo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f_tamanho[1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] alto
## Levels: alto baixo medio&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f_tamanho[2]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] baixo
## Levels: alto baixo medio&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f_tamanho[1] &amp;gt; f_tamanho[2]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in Ops.factor(f_tamanho[1], f_tamanho[2]): &amp;#39;&amp;gt;&amp;#39; not meaningful for
## factors&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] NA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sem ordenarmos, não podemos comparar os níveis e estamos assumindo a variável como sendo nominal.&lt;/p&gt;
&lt;p&gt;Para ordernar os níveis de um vetor de fatores, temos que informar alguns parâmetros adicionais – &lt;em&gt;order&lt;/em&gt; e &lt;em&gt;levels&lt;/em&gt; – ao criá-lo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f_tamanho &amp;lt;- factor(tamanho, ordered = T, levels &amp;lt;- c(&amp;quot;baixo&amp;quot;, &amp;quot;medio&amp;quot;, &amp;quot;alto&amp;quot;))
print(f_tamanho)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] alto  baixo baixo medio alto  baixo medio
## Levels: baixo &amp;lt; medio &amp;lt; alto&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note que a informação sobre os “levels” acompanha a ordem informada, que, neste caso, é diferente da alfabética. Comparações entre os níveis fazem sentido se a variável for ordinal:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f_tamanho[1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] alto
## Levels: baixo &amp;lt; medio &amp;lt; alto&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f_tamanho[2]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] baixo
## Levels: baixo &amp;lt; medio &amp;lt; alto&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f_tamanho[1] &amp;gt; f_tamanho[2]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f_tamanho &amp;gt; &amp;quot;medio&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Voltaremos aos “factors” em momento adequado. O importante agora é saber que eles existem e que é uma classe de vetores em R. Atenção especial deve ser dada ao fato de que diversas vezes, ao importarmos bases de dados para o “workspace”, o R considera variáveis de texto como sendo “factors”, mesmo de maneira inadequada. Para evitar este problema, devemos adotar o argumento “stringAsFactors = F” em diversas funções de importação. Como avisei no início deste tópico, “factors” é um dos aspectos mais confusos em R (em conjunto com “missing values”, que vamos adiar até um momento adequado).&lt;/p&gt;
&lt;p&gt;Em síntese:&lt;/p&gt;
&lt;p&gt;Fatores são vetores de categorias específicas, definidas por meio do parâmetro &lt;code&gt;levels&lt;/code&gt;. A ordem dos fatores pode ser especificada pela função &lt;code&gt;ordered&lt;/code&gt;. Experimente:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Vetor de texto
tipos.casas &amp;lt;- c(&amp;quot;casa&amp;quot;, &amp;quot;apartamento&amp;quot;, &amp;quot;apartamento&amp;quot;, &amp;quot;sobrado&amp;quot;)

# Vetor de fatores
tipos.casas &amp;lt;- factor(c(&amp;quot;casa&amp;quot;, &amp;quot;apartamento&amp;quot;, &amp;quot;apartamento&amp;quot;, &amp;quot;sobrado&amp;quot;), levels=c(&amp;quot;casa&amp;quot;, &amp;quot;apartamento&amp;quot;, &amp;quot;sobrado&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quando utilizamos dados em estrutura de fatores, é possível gerar sínteses rápidas e simples por meio da função &lt;code&gt;table&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(tipos.casas)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tipos.casas
##        casa apartamento     sobrado 
##           1           2           1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dados fatoriais são úteis para o tratamento de dados categóricos, ou que pertencem a um determinado número de classes predeterminadas. Existem muitas feições representadas por meio de dados espaciais que são estruturadas em variáveis discretas.&lt;/p&gt;
&lt;p&gt;LEMBRANDO….. Dados podem ser:
&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/continuous_discrete.png&#34; alt=&#34;Discretos x Contínuos&#34; /&gt;
&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/nominal_ordinal_binary.png&#34; alt=&#34;Discreto x Contínuo&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Para ordenar dados fatoriais, utilizamos a função &lt;code&gt;ordered&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;renda_1 &amp;lt;- factor(c(&amp;quot;alta&amp;quot;, &amp;quot;alta&amp;quot;, &amp;quot;baixa&amp;quot;, &amp;quot;baixa&amp;quot;, &amp;quot;media&amp;quot;, &amp;quot;alta&amp;quot;), levels=c(&amp;quot;baixa&amp;quot;, &amp;quot;media&amp;quot;, &amp;quot;alta&amp;quot;)) 

renda_2 &amp;lt;- ordered(c(&amp;quot;alta&amp;quot;, &amp;quot;alta&amp;quot;, &amp;quot;baixa&amp;quot;, &amp;quot;baixa&amp;quot;, &amp;quot;media&amp;quot;, &amp;quot;alta&amp;quot;), levels=c(&amp;quot;baixa&amp;quot;, &amp;quot;media&amp;quot;, &amp;quot;alta&amp;quot;)) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tipos-de-classes-no-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Tipos de classes no R&lt;/h1&gt;
&lt;p&gt;Diferentes tipos de dados podem ser utilizados para popular diferentes estruturas de dados ou &lt;code&gt;classes&lt;/code&gt;. As classes mais comumente utilizadas para análise de dados espaciais são: vetores, matrizes, data frames, listas e factores.&lt;/p&gt;
&lt;p&gt;É por meio das classes que as funções e operadores conseguem saber exatamente o que fazer com um objeto.&lt;/p&gt;
&lt;p&gt;Experimente:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;1+1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Faça &lt;code&gt;&#34;a&#34; + &#34;b&#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;O operador &lt;code&gt;+&lt;/code&gt; verifica que “a” e “b” não são números (ou que não são do tipo &lt;code&gt;numeric&lt;/code&gt;) e devolve uma mensagem de erro informando isso.&lt;/p&gt;
&lt;div id=&#34;vetores&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Vetores&lt;/h2&gt;
&lt;p&gt;O R é construído com base no conceito de vetores e matrizes. As maior parte das operações é feita para os elementos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Definição de vetores
vector(mode = &amp;quot;numeric&amp;quot;, length = 8)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0 0 0 0 0 0 0 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector(length = 8)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tmp &amp;lt;- data.frame(a=10:15, b=15:20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Aproveitando o embalo dos vetores atômicos, vamos ver um pouco mais sobre vetores de tamanho maior que 1. Alguns exemplos e suas classes:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vetor_numerico &amp;lt;- c(42, 7, 999, 3.14)
vetor_texto &amp;lt;- c(&amp;quot;Miriam&amp;quot;, &amp;quot;a&amp;quot;, &amp;#39;jota&amp;#39;, &amp;quot;TRUE&amp;quot;, &amp;quot;4&amp;quot;)
vetor_logico &amp;lt;- c(TRUE, FALSE, F, F, T)
class(vetor_numerico)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;numeric&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(vetor_texto)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(vetor_logico)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;logical&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Detalhes para observarmos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No caso do vetor numérico, não importa se usamos números com casas decimais.&lt;/li&gt;
&lt;li&gt;Para vetores do tipo “character”, não importa o que há dentro dos parêntese. Tudo é texto.&lt;/li&gt;
&lt;li&gt;Você pode usar TRUE ou T, FALSE ou F, alternadamente. O R entende o que você quer dizer. Lembre-se de sempre usar maiúsculas.&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;sequências&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Sequências&lt;/h3&gt;
&lt;p&gt;Dá um trabalho danado criar uma sequência de números de, por exemplo, 42 a 66. Ou sequências ainda maiores. Uma maneira simples (mas não a única), de gerar uma sequência de inteiros em R é utilizar “:”. Veja o exemplo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sequencia &amp;lt;- 42:66
print(sequencia)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A sequência pode ter ordem reversa:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sequencia_reversa &amp;lt;- 10:1
print(sequencia_reversa)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 10  9  8  7  6  5  4  3  2  1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos combinar sequências que contém um intervalo, ou mesmo sequências que se sobrepõe, em um único vetor:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sequencia_intervalo &amp;lt;- c(1:10, 20:30)
print(sequencia_intervalo)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  1  2  3  4  5  6  7  8  9 10 20 21 22 23 24 25 26 27 28 29 30&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sequencia_sobreposicao &amp;lt;- c(10:20, 15:25)
print(sequencia_sobreposicao)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 10 11 12 13 14 15 16 17 18 19 20 15 16 17 18 19 20 21 22 23 24 25&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;operações-matemáticas-com-vetores&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Operações matemáticas com vetores&lt;/h3&gt;
&lt;p&gt;Vamos considerar uma operação com vetores considerando a conversão de dados entre Farenheit e Celsius.&lt;/p&gt;
&lt;p&gt;Temos um vetor de temperaturas médias dos meses de dezembro a abril em um lugar qualquer do hemisfério Norte:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temperatura_celsius &amp;lt;- c(-7, -10, 5, 12, 21)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Da mesma maneira que com vetores atômicos, podemos aplicar as operações matemáticas a vetores maiores. Por exemplo, vamos converter os valores do vetor “temperatura_celsius” para farenheit:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temperatura_farenheit &amp;lt;- ((temperatura_celsius / 5) * 9) + 32&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Veja que as operações são aplicadas a todos os elementos do vetor.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;nomes-do-vetor&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Nomes do vetor&lt;/h3&gt;
&lt;p&gt;Aproveitando o exemplo, os elementos de um vetor podem ser nomeados. O vetor “temperatura_celsius”, por enquanto, não tem nome:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(temperatura_celsius)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## NULL&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se quiseremos atribuir os nomes aos elementos de “temperatura_celsius”, atribuimos um vetor a “names(temperatura_celsius)”. Esse uso da linguagem é um pouco estranho, pois estamos atribuindo algo a uma função de um objeto, não a um objeto.&lt;/p&gt;
&lt;p&gt;Uma maneira de pensar esse uso de maneira menos confusa, é imaginar que um objeto tem várias partes e que estamos atribuindo algo a uma parte específica – os nomes dos elementos, no caso – deste objeto. Veja:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(temperatura_celsius) &amp;lt;- c(&amp;quot;dezembro&amp;quot;, &amp;quot;janeiro&amp;quot;, &amp;quot;fevereiro&amp;quot;, &amp;quot;março&amp;quot;, &amp;quot;abril&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Outra forma, mais elegante, de nomear os elementos de um vetor é criar um novo vetor com os nomes, tal como abaixo…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meses_experimento &amp;lt;- c(&amp;quot;dezembro&amp;quot;, &amp;quot;janeiro&amp;quot;, &amp;quot;fevereiro&amp;quot;, &amp;quot;março&amp;quot;, &amp;quot;abril&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;… e a seguir atribuir aos nomes dos elementos do vetor existente (no nosso caso, temperatura_celsius):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(temperatura_celsius) &amp;lt;- meses_experimento&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A vantagem deste processo é poder usar mais de uma vez o vetor de nomes sem precisar escrevê-lo novamente, como faremos no exemplo abaixo.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;classes-dos-vetores-atômicos&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Classes dos vetores atômicos&lt;/h3&gt;
&lt;p&gt;Há três &lt;strong&gt;classes&lt;/strong&gt; fundamentais para os vetores atômicos. Vamos criar três variáveis e examinar suas classes:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;numero_pi &amp;lt;- 3.14
texto &amp;lt;- &amp;quot;Meu texto&amp;quot;
verdadeiro &amp;lt;- TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Usamos a função &lt;em&gt;class&lt;/em&gt; para examinar a classe de um objeto:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(numero_pi)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;numeric&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(texto)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(verdadeiro)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;logical&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Auto-explicativo, certo? De forma mais detalhada, apresentaremos os principais tipos de dados e as classes de objetos no R a seguir.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;operações-entre-vetores&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Operações entre vetores&lt;/h3&gt;
&lt;p&gt;Criemos dois vetores, cada um registrando os gastos com sorvete e café de um pessoa em cada dia da semana, sábado e domingo, inclusive:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;semana_1 &amp;lt;- c(32, 20, 15, 20, 18, 19, 40)
semana_2 &amp;lt;- c(32, 21, 12, 12, 24, 21, 50)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Antes de seguir com as operações entre os vetores, vamos nomear seus elementos. Vale a penas criar um único vetor, “dias_da_semana”, e atribuir aos nomes dos elementos dos vetores de dados de gasto com sorvete e café:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dias_da_semana &amp;lt;- c(&amp;quot;Domingo&amp;quot;, &amp;quot;Segunda&amp;quot;, &amp;quot;Terca&amp;quot;, &amp;quot;Quarta&amp;quot;, &amp;quot;Quinta&amp;quot;, &amp;quot;Sexta&amp;quot;, &amp;quot;Sabado&amp;quot;)
names(semana_1) &amp;lt;- dias_da_semana 
names(semana_2) &amp;lt;- dias_da_semana&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Operações entre vetores seguem a mesma lógica das operações com vetores atômicos e com vetores e números, com a ressalva de que as operações são realizadas “pareando” os elementos dos vetores. Dito de outra forma, ao somarmos dois vetores, por exemplo, o vetor resultante terá na primeira posição a soma dos elementos da primeira posição dos vetores originais, a segunda posição terá a soma dos elementos da segunda posição dos vetores originais e assim por diante. Executando o exemplo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;soma_semanas &amp;lt;- semana_1 + semana_2
print(soma_semanas)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Domingo Segunda   Terca  Quarta  Quinta   Sexta  Sabado 
##      64      41      27      32      42      40      90&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note que, como os vetores originais já estavam nomeados e os elementos em cada posição tinham o mesmo nome, o vetor resultante também já está nomeado.&lt;/p&gt;
&lt;p&gt;É bastante simples criar um vetor que seja a combinação de dois vetores. Por exemplo, se quisermos juntar as duas semanas em um único vetor, usamos a função &lt;em&gt;c&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;duas_semanas &amp;lt;- c(semana_1, semana_2)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;subconjunto-de-um-vetor---parte-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Subconjunto de um vetor - parte 1&lt;/h3&gt;
&lt;p&gt;E se quisermos extrair elementos em apenas uma ou algumas posições de um vetor?&lt;/p&gt;
&lt;p&gt;Quando queremos selecionar elementos de um vetor (ou, no futuro, de uma matriz ou de um &lt;em&gt;data frame&lt;/em&gt;) usamos colchetes [] ao final do objeto. Vetores são objetos com uma única dimensão, então tudo que precisamos fazer é colocar o número da posição que queremos dentro dos colchetes. Chamamos esse procedimento em inglês de “subset” (no português, “selecionar um subconjunto”).&lt;/p&gt;
&lt;p&gt;Para extrair o primeiro dia do vetor com dados da semana 1 (domingo):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;semana_1[1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Domingo 
##      32&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ou, para extrair o final de semana (domingo na posição 1 e sábado na posição 7):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;semana_1[c(1,7)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Domingo  Sabado 
##      32      40&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ou ainda, os dias úteis da semana:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;semana_1[2:6]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Segunda   Terca  Quarta  Quinta   Sexta 
##      20      15      20      18      19&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se os elementos do vetor estiverem adequadamente nomeados, podemos usar seus nomes no lugar de suas posições. Repetindo os dois primeiros exemplos imediatamente acima temos:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;semana_1[&amp;quot;Domingo&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Domingo 
##      32&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;semana_1[c(&amp;quot;Domingo&amp;quot;, &amp;quot;Sabado&amp;quot;)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Domingo  Sabado 
##      32      40&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos usar um vetor para nos auxíliar a produzir o subconjunto:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dias_uteis &amp;lt;- c(&amp;quot;Segunda&amp;quot;, &amp;quot;Terca&amp;quot;, &amp;quot;Quarta&amp;quot;, &amp;quot;Quinta&amp;quot;, &amp;quot;Sexta&amp;quot;)
semana_1[dias_uteis]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Segunda   Terca  Quarta  Quinta   Sexta 
##      20      15      20      18      19&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;soma-média-e-estatísticas-descritivas-dos-elementos-de-um-vetor&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Soma, média e estatísticas descritivas dos elementos de um vetor&lt;/h3&gt;
&lt;p&gt;Ao longo do tempo, nosso repertório de funções de R aumentará rapidamente. Há um conjunto de funções fáceis de lembrar que são muito úteis para calcular estatísticas descritivas de um vetor (ou de uma variável em um &lt;em&gt;data frame&lt;/em&gt;). Exemplo: meu consumo de litros de café por mês em 2016.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;litros_cafe &amp;lt;- c(4.3, 3.1, 5.3, 5.5, 6.9, 8.3, 9.7, 9.9, 9.1, 7.0, 6.2, 5.6)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Observe as funções de soma, media, desvio padrão, variância, mediana, máximo, mínimo e quantil, na respectiva ordem:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sum(litros_cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 80.9&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(litros_cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 6.741667&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sd(litros_cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.158475&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;var(litros_cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4.659015&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;median(litros_cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 6.55&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;max(litros_cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 9.9&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(litros_cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;quantile(litros_cafe, probs = c(0, 0.25, 0.5, 0.75, 1))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   0%  25%  50%  75% 100% 
## 3.10 5.45 6.55 8.50 9.90&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Veja que, com a exceção de &lt;em&gt;quantile&lt;/em&gt;, todas as funções retornam vetores atômicos. &lt;em&gt;quantile&lt;/em&gt; retorna um vetor do tamanho do vetor de probabilidades, que é o segundo argumento da função, e que indica os quantis correspondentes a cada valor.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;subconjunto-de-um-vetor---parte-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Subconjunto de um vetor - parte 2&lt;/h3&gt;
&lt;p&gt;Finalmente, vamos usar operadores relacionais. A “Organização Mundial de Bebedores de Café”, OMBC, recomenda que o consumo de café não ultrapasse o limite de até 7 litros por mês (inclusive). Vamos observar o histórico em meses de consumo de café para um indivíduo.&lt;/p&gt;
&lt;p&gt;Nomeando o vetor:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meses &amp;lt;- c(&amp;quot;Janeiro&amp;quot;, &amp;quot;Fevereiro&amp;quot;, &amp;quot;Marco&amp;quot;, &amp;quot;Abril&amp;quot;, &amp;quot;Maio&amp;quot;, &amp;quot;Junho&amp;quot;, 
           &amp;quot;Julho&amp;quot;, &amp;quot;Agosto&amp;quot;, &amp;quot;Setembro&amp;quot;, &amp;quot;Outubro&amp;quot;, &amp;quot;Novembro&amp;quot;, &amp;quot;Dezembro&amp;quot;)
names(litros_cafe) &amp;lt;- meses&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Criando um vetor lógico (TRUE ou FALSE) que indique em quais meses o consumo ultrapassou o limite recomendado:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;selecao &amp;lt;- litros_cafe &amp;gt; 7
print(selecao)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Janeiro Fevereiro     Marco     Abril      Maio     Junho     Julho    Agosto 
##     FALSE     FALSE     FALSE     FALSE     FALSE      TRUE      TRUE      TRUE 
##  Setembro   Outubro  Novembro  Dezembro 
##      TRUE     FALSE     FALSE     FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Usamos o vetor “selecao” para fazer o subconjunto do vetor de dados de consumo de café:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;litros_cafe[selecao]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Junho    Julho   Agosto Setembro 
##      8.3      9.7      9.9      9.1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para vetores pequenos, o procedimento adotado para gerar subconjuntos parece desnecessariamente trabalhoso. Mas imagine agora que você queira observar os votos de todos os candidatos que atendam a determinada condição – por exemplo, terem gastos de campanha acima de determinado patarmar. Com uma variável (gasto de campanha) você pode gerar um vetor de seleção que permite gerar o subconjunto desejado.&lt;/p&gt;
&lt;p&gt;Voltaremos em variações desse assunto em diversos momentos no futuro.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;listas&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Listas&lt;/h2&gt;
&lt;p&gt;Os tipos de dados &lt;code&gt;character&lt;/code&gt;, &lt;code&gt;numeric&lt;/code&gt; e &lt;code&gt;logical&lt;/code&gt; só podem ser associados a classes de dados nas quais TODOS os elementos são do mesmo tipo. A classe &lt;code&gt;listas&lt;/code&gt; não tem esse requisito. As listas têm posições (índices) para diferentes topos de elementos.&lt;/p&gt;
&lt;p&gt;Para acessar um elemento em um vetor, utilizamos &lt;code&gt;[]&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_teste &amp;lt;- c(5:10)
vector_teste&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  5  6  7  8  9 10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_teste[4]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para acessar um elemento em uma lista por meio de sua posição, utilizamos &lt;code&gt;[[]]&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colaborador &amp;lt;- list(name=&amp;quot;Renata Oliveira&amp;quot;, ano.inicio = 2006, posicao = &amp;quot;Professora&amp;quot;)
colaborador&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $name
## [1] &amp;quot;Renata Oliveira&amp;quot;
## 
## $ano.inicio
## [1] 2006
## 
## $posicao
## [1] &amp;quot;Professora&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;matrizes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Matrizes&lt;/h2&gt;
&lt;p&gt;Matrizes são um conjunto de vetores. As linhas e colunas das matrizes podem ser nomeadas. Na análise espacial de um dado vetorial, temos uma tabela de atributos em estrutura matricial. As linhas representam as feições e as colunas são os atributos dessas feições. Na representação de dados raster, linhas e colunas representam latitudes e longitudes ou células raster.&lt;/p&gt;
&lt;p&gt;Uma característica distintiva da linguagem de programação R é ter sido desenvolvida para a análise de dados. E quando pensamos em análise de dados, a protagonista do show é a &lt;em&gt;base de dados&lt;/em&gt; ou, como vamos conhecer a partir de agora, &lt;strong&gt;dataframe&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Durante o curso, utilizaremos poucas ou nenhuma vez matrizes. Há uma razão para isso: estamos &lt;a href=&#34;mailto:interessad@s&#34; class=&#34;email&#34;&gt;interessad@s&lt;/a&gt; sorbetudo em dados no formato de &lt;em&gt;data frame&lt;/em&gt;, que é um caso específico de matriz. Ainda assim, convém rapidamente aprender sobre matrizes para, advinhe, entender um pouco mais sobre &lt;em&gt;data frames&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Para matemáticos, matrizes são objetos com uma álgebra própria e parte de uma área denominada Álgebra Linear. Por exemplo, a multiplicação de matrizes, se você lembra dela de seu período de escola ou graduação, segue regras e tem propriedades diferentes da multiplicação de números. Apesar do R ter uma “gramática” para Álgebra Linear (que lembra o MATLAB e Octave), ela não nos interessa agora e a deixaremos de lado.&lt;/p&gt;
&lt;p&gt;Para criarmos uma matriz, precisamos de um vetor que contenha o número de elementos a serem inseridos em uma matriz. Para uma matriz de 3 linhas e 3 colunas, precisamos de um vetor de 9 elementos, a exemplo do vetor gerado pelo comando “1:9”.&lt;/p&gt;
&lt;p&gt;Há duas maneiras de “preencher” a matriz: pelas linhas (“byrow = T”) ou pelas colunas (“byrow = F”). Veja os exemplos abaixo e tente compreender o funcionamento de &lt;em&gt;matrix&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;matrix(1:9, byrow = TRUE, nrow = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      [,1] [,2] [,3]
## [1,]    1    2    3
## [2,]    4    5    6
## [3,]    7    8    9&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;matrix(1:9, byrow = FALSE, nrow = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      [,1] [,2] [,3]
## [1,]    1    4    7
## [2,]    2    5    8
## [3,]    3    6    9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos a um exemplo de matriz criada a partir de 3 vetores. Os vetores abaixo representam o gasto de café de 3 pessoas de segunda a sexta-feira em uma semana determinada.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beatriz &amp;lt;- c(4, 5, 0, 3, 5)
pedro &amp;lt;- c(2, 2, 2, 2, 2)
mateus &amp;lt;- c(0, 0, 12, 0, 0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos juntar todas os vetores em um só…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vetor_cafe &amp;lt;- c(beatriz, pedro, mateus)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;… e criar uma matriz de 5 linhas e 3 colunas denominada café:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cafe &amp;lt;- matrix(vetor_cafe, byrow = FALSE, nrow = 5)
print(cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      [,1] [,2] [,3]
## [1,]    4    2    0
## [2,]    5    2    0
## [3,]    0    2   12
## [4,]    3    2    0
## [5,]    5    2    0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Veja que as margens da matriz não tem nomes. Vamos proceder como fizemos com vetores. Entretanto, não vamos nomear cada elemento, mas as linhas e colunas, e utilizaremos as funções &lt;em&gt;rownames&lt;/em&gt; e &lt;em&gt;colnames&lt;/em&gt; para a tarefa:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fregueses &amp;lt;- c(&amp;quot;Beatriz&amp;quot;, &amp;quot;Pedro&amp;quot;, &amp;quot;Mateus&amp;quot;)
dias_uteis &amp;lt;- c(&amp;quot;Segunda&amp;quot;, &amp;quot;Terca&amp;quot;, &amp;quot;Quarta&amp;quot;, &amp;quot;Quinta&amp;quot;, &amp;quot;Sexta&amp;quot;)
rownames(cafe) &amp;lt;- dias_uteis
colnames(cafe) &amp;lt;- fregueses
print(cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         Beatriz Pedro Mateus
## Segunda       4     2      0
## Terca         5     2      0
## Quarta        0     2     12
## Quinta        3     2      0
## Sexta         5     2      0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O processo de nomear as linhas e colunas poderia ser realizado no momento em que a matriz foi gerada com o uso do argumento &lt;em&gt;dimnames&lt;/em&gt;, como no exemplo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cafe &amp;lt;- matrix(vetor_cafe, byrow = FALSE, nrow = 5,
               dimnames = list(dias_uteis, fregueses))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E se quisermos trocar as linhas pelas colunas – processo conhecido como transposição da matriz? Usamos a função &lt;em&gt;t&lt;/em&gt;. Dica: &lt;em&gt;c&lt;/em&gt; e &lt;em&gt;t&lt;/em&gt; são funções em R. Evite criar objetos com esse nome.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t(cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         Segunda Terca Quarta Quinta Sexta
## Beatriz       4     5      0      3     5
## Pedro         2     2      2      2     2
## Mateus        0     0     12      0     0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se quisermos juntar os três vetores originais como se fossem colunas, podemos usar a função &lt;em&gt;cbind&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cbind(beatriz, pedro, mateus)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      beatriz pedro mateus
## [1,]       4     2      0
## [2,]       5     2      0
## [3,]       0     2     12
## [4,]       3     2      0
## [5,]       5     2      0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;rbind&lt;/em&gt;, função bastante útil e que voltará várias vezes no curso, faz o mesmo tratando os vetores como linhas:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rbind(beatriz, pedro, mateus)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         [,1] [,2] [,3] [,4] [,5]
## beatriz    4    5    0    3    5
## pedro      2    2    2    2    2
## mateus     0    0   12    0    0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As funções &lt;em&gt;rowSums&lt;/em&gt; e &lt;em&gt;colSums&lt;/em&gt;, como é de se esperar, calculam as somas de todos os elementos de cada linha e de cada coluna, respectivamente:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rowSums(cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Segunda   Terca  Quarta  Quinta   Sexta 
##       6       7      14       5       7&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colSums(cafe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Beatriz   Pedro  Mateus 
##      17      10      12&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Combinando as funções de soma com as de combinação (sic), podemos gerar os totais nas margens da matriz:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Total_Coluna &amp;lt;- colSums(cafe)
cafe2 &amp;lt;- rbind(cafe, Total_Coluna)
Total_Linha &amp;lt;- rowSums(cafe2)
cafe2 &amp;lt;- cbind(cafe2, Total_Linha)
print(cafe2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##              Beatriz Pedro Mateus Total_Linha
## Segunda            4     2      0           6
## Terca              5     2      0           7
## Quarta             0     2     12          14
## Quinta             3     2      0           5
## Sexta              5     2      0           7
## Total_Coluna      17    10     12          39&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como com vetores, podemos fazer operações aritméticas (veja que não estamos falando de Álgebra Linear) com matrizes. Por exemplo, para transformar os gastos com café em doláres (cotação = 3.2):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cafe / 3.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         Beatriz Pedro Mateus
## Segunda  1.2500 0.625   0.00
## Terca    1.5625 0.625   0.00
## Quarta   0.0000 0.625   3.75
## Quinta   0.9375 0.625   0.00
## Sexta    1.5625 0.625   0.00&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos também relizar operações entre matrizes de mesmas dimensões que considerem os elementos de forma pareada, tal como com vetores. Usando as duas matrizes do começo deste tópico:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;matrix(1:9, byrow = TRUE, nrow = 3) + matrix(1:9, byrow = FALSE, nrow = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      [,1] [,2] [,3]
## [1,]    2    6   10
## [2,]    6   10   14
## [3,]   10   14   18&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tanto sobre matriz para chegarmos ao que realmente importa: subconjuntos de matrizes. Com vetores, usamos colchetes para produzirmos subconjuntos. As regras que aprendemos para vetores valem para matrizes. A diferença é que matrizes – e também &lt;em&gt;data frames&lt;/em&gt; – são objetos com duas dimensões (linhas e colunas). Portanto, ao extrairmos um subconjunto, precisamos informar as duas dimensões nos colchetes, primeiro linha, depois coluna, separadas por vírgula. Se deixamos uma das dimensões em branco, estamos selecionando todos os elementos daquela dimensão.&lt;/p&gt;
&lt;p&gt;Vamos a uma série de exemplos para compreender as regras de subconjunto de matrizes.&lt;/p&gt;
&lt;p&gt;Selecionar toda a segunda coluna:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cafe[, 2]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Segunda   Terca  Quarta  Quinta   Sexta 
##       2       2       2       2       2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Selecionar toda a terceira linha:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cafe[3, ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Beatriz   Pedro  Mateus 
##       0       2      12&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Selecionar o elemento da linha 1 e coluna 3:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cafe[1, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Selecionar os elementos 4 e 5 da coluna 1:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cafe[4:5, 1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Quinta  Sexta 
##      3      5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Selecionar os elementos 1, 3 e 5 da coluna 3:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cafe[c(1,3,5), 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Segunda  Quarta   Sexta 
##       0      12       0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Selecionar o elemento 4 das colunas 2 e 3:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cafe[4, 2:3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  Pedro Mateus 
##      2      0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Selecionar a segunda e terça-feira de Pedro:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cafe[c(&amp;quot;Segunda&amp;quot;, &amp;quot;Terca&amp;quot;), &amp;quot;Pedro&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Segunda   Terca 
##       2       2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Selecionar a quarta-feira de todos:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cafe[&amp;quot;Quarta&amp;quot;,]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Beatriz   Pedro  Mateus 
##       0       2      12&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dataframes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dataframes&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Data frames&lt;/code&gt; e &lt;code&gt;tibble&lt;/code&gt; são estruturas tabulares de dados que, diferentemente das matrizes (&lt;code&gt;matrix&lt;/code&gt;), permitem representar diferentes atributos (e tipos de dados) em diferentes colunas. Esses tipos de classes são utilizadas para organizar dados espaciais (pontos, linhas, áreas e pixels).&lt;/p&gt;
&lt;p&gt;Por esta razão, em vez de aprender como fazer aritmética, elaborar funções ou executar loops para repetir tarefas e outros aspectos básicos da linguagem, vamos começar olhando para o R como um software concorrente dos demais utilizados para análise de dados em ciências sociais, como SPSS, Stata, SAS e companhia.&lt;/p&gt;
&lt;p&gt;As principais características de um dataframe são: (1) cada coluna representa uma variável (ou característica) de um conjunto de observações; (2) cada linha representa uma observação e contém os valores de cada variável para tal observação. Vejamos um exemplo:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Candidato&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Partido&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Votos&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Beatriz&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;PMDB&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;350&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Danilo&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;SOL&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1598&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Pedro&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;PTB&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;784&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Davi&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;PSD&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;580&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Mateus&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;PV&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Com a função &lt;em&gt;data&lt;/em&gt; podemos carregar um conjunto de dados disponível na sua sessão de R. Utilizaremos a base &lt;em&gt;mtcars&lt;/em&gt;, que contém dados da revista &lt;em&gt;Motor Trend US&lt;/em&gt; sobre características (variáveis) de 32 automóveis (esse é um dos conjuntos de dados mais populares em cursos introdutórios de R).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pronto! Logo mais veremos como abrir conjuntos de dados de outras fontes (arquivos de texto, outros softwares, etc), mas já podemos começar a trabalhar com &lt;em&gt;data frames&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Antes de avançar, vamos usar o &lt;strong&gt;help&lt;/strong&gt; (documentação) do R para descobrir o que há no &lt;em&gt;data frame&lt;/em&gt; chamado &lt;em&gt;mtcars&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;?mtcars&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## starting httpd help server ... done&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se quiseremos olhar para os dados que acabamos de carregar utilizamos a função &lt;em&gt;View&lt;/em&gt; (com V maiúsculo, algo pouco usual em R):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;View(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;do-editor-de-planilhas-ao-r---parte-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Do editor de planilhas ao R - parte 1&lt;/h3&gt;
&lt;p&gt;A partir desse ponto no curso vamos resistir à tentação de “olhar” para os dados. O hábito de quem utiliza com editores de planilha como MS Excel ou Libre Office, ou ainda com algums softwares de análise de dados como SPSS e Minitab, é trabalhar “olhando” para os dados, ou seja, para os valores de cada célula de uma base dados.&lt;/p&gt;
&lt;p&gt;Você perceberá em pouco tempo que isso não é necessário. Na verdade, é contraproducente. Nas primeiras aulas vamos nos munir de ferramentas que nos permitirão conhecer os dados sem olhá-los diretamente.&lt;/p&gt;
&lt;div id=&#34;head-no-lugar-de-view&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Head no lugar de View&lt;/h4&gt;
&lt;p&gt;Por exemplo, podemos substituir a função &lt;em&gt;View&lt;/em&gt; pela função &lt;em&gt;head&lt;/em&gt;. Veja o resultado:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Com apenas as 6 primeiras linhas do &lt;em&gt;data frame&lt;/em&gt; temos noção de todo o conjunto. Sabemos rapidamente que os nomes dos carros são o nome de cada uma das linhas, e que o nome das colunas indicam qual característica está armazenada coluna (lembra-se da documentação de &lt;em&gt;mtcars&lt;/em&gt; que você acabou de ler).&lt;/p&gt;
&lt;p&gt;Alternativamente, podemos usar a função &lt;em&gt;str&lt;/em&gt; (atalho para “structure”):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    32 obs. of  11 variables:
##  $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...
##  $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...
##  $ disp: num  160 160 108 258 360 ...
##  $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...
##  $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...
##  $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...
##  $ qsec: num  16.5 17 18.6 19.4 17 ...
##  $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...
##  $ am  : num  1 1 1 0 0 0 0 0 0 0 ...
##  $ gear: num  4 4 4 3 3 3 3 4 4 4 ...
##  $ carb: num  4 4 1 1 2 1 4 2 2 4 ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Com &lt;em&gt;str&lt;/em&gt; sabemos qual é a lista de variáveis (colunas) no &lt;em&gt;data frame&lt;/em&gt;, de qual tipo são – no caso, todas são numéricas e vamos falar sobre esse tema mais tarde – e os primeiros valores de cada uma, além do número total de observações e variáveis mostrados no topo do &lt;strong&gt;output&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Há outras maneiras de obter o número linhas e colunas de um &lt;em&gt;data frame&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nrow(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 32&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ncol(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 11&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 32 11&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;nrow&lt;/em&gt; retorna o número de linhas; &lt;em&gt;ncol&lt;/em&gt;, o de coluna; &lt;em&gt;dim&lt;/em&gt; as dimensões (na ordem linha e depois coluna) do objeto.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;names&lt;/em&gt;, por sua vez, retorna os nomes das variáveis do &lt;em&gt;data frame&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;mpg&amp;quot;  &amp;quot;cyl&amp;quot;  &amp;quot;disp&amp;quot; &amp;quot;hp&amp;quot;   &amp;quot;drat&amp;quot; &amp;quot;wt&amp;quot;   &amp;quot;qsec&amp;quot; &amp;quot;vs&amp;quot;   &amp;quot;am&amp;quot;   &amp;quot;gear&amp;quot;
## [11] &amp;quot;carb&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;argumentos-ou-parâmetros-das-funções&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Argumentos ou parâmetros das funções&lt;/h4&gt;
&lt;p&gt;Note que em todas as funções que utilizamos até agora, &lt;em&gt;mtcars&lt;/em&gt; está dentro do parêntesis que segue o nome da função. Essa &lt;strong&gt;sintax&lt;/strong&gt; é característica das funções de R. O que vai entre parêntesis são os &lt;strong&gt;argumentos&lt;/strong&gt; ou &lt;strong&gt;parâmetros&lt;/strong&gt; da função, ou seja, os “inputs” que serão transformados.&lt;/p&gt;
&lt;p&gt;Uma função pode receber mais de um argumento. Pode também ter argumentos não obrigatórios, ou seja, para os quais não é necessário informar nada se você não quiser alterar os valores pré-definidos. Por exemplo, a função &lt;em&gt;head&lt;/em&gt; contém o argumento &lt;em&gt;n&lt;/em&gt;, que se refere ao número de linhas a serem &lt;strong&gt;impressas&lt;/strong&gt; na tela, pré-estabelecido em 6 (você pode conhecer os argumentos da função na documentação do R usando &lt;em&gt;?&lt;/em&gt; antes do nome da função). Para alterá-lo para 10, por exemplo, basta fazer:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(x = mtcars, n = 10)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                    mpg cyl  disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4         21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag     21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710        22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive    21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2
## Valiant           18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
## Duster 360        14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
## Merc 240D         24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
## Merc 230          22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
## Merc 280          19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;x&lt;/em&gt; é o argumento que já havíamos utilizado anteriormente e indica em que objeto a função &lt;em&gt;head&lt;/em&gt; será aplicada. Dica: você pode omitir tanto “x =” quanto “n =” se você já conhecer a ordem de cada argumento no uso da função. Veja que neste caso estamos utilizando o símbolo “=” sem fazer a atribuição de dados a um objeto, mas para atribuir valores (ou objetos) aos argumento de uma função. Para não haver confusão é preferível usar o símbolo “&amp;lt;-” para atribuição e o “=” para as demais situações.&lt;/p&gt;
&lt;p&gt;A classe &lt;code&gt;data.frame&lt;/code&gt; no R é composta por uma série de vetores de &lt;strong&gt;comprimento igual&lt;/strong&gt; (número de observações) que juntos formam uma estrutura de dados bi-dimensional. Cada vetor registra valores de um atributo específico. Essa é a classe de dados mais comumente utilizada para armazenar dados no R.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(dist=seq(0, 400, 100), city=c(&amp;quot;Belo Horizonte&amp;quot;, &amp;quot;São Paulo&amp;quot;, &amp;quot;Rio de Janeiro&amp;quot;, &amp;quot;Brasília&amp;quot;, &amp;quot;Salvador&amp;quot;))
str(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    5 obs. of  2 variables:
##  $ dist: num  0 100 200 300 400
##  $ city: chr  &amp;quot;Belo Horizonte&amp;quot; &amp;quot;São Paulo&amp;quot; &amp;quot;Rio de Janeiro&amp;quot; &amp;quot;Brasília&amp;quot; ...&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;A função &lt;code&gt;seq&lt;/code&gt; possibilita a criação de uma sequência de dados por meio de três parâmetros: seq(&lt;code&gt;valor_inicial&lt;/code&gt;, &lt;code&gt;valor_final&lt;/code&gt;, &lt;code&gt;intervalo&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tibbles e data.frames não são muito diferentes. Há alguns detalhes quanto à transformação de dados na criação dessas classes, mas, em linhas gerais, a estrutura de dados em &lt;code&gt;tibble&lt;/code&gt; é mais eficiente e organizada.&lt;/p&gt;
&lt;p&gt;As seguintes funções são adequadas tanto para &lt;code&gt;data.frames&lt;/code&gt; como para &lt;code&gt;tibble&lt;/code&gt;:&lt;br /&gt;
&lt;code&gt;names()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;colnames()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;rownames()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;length()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;ncol()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;nrow()&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Explore a documentação do &lt;code&gt;tibble&lt;/code&gt; em: &lt;code&gt;vignette(&#34;tibble&#34;)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Os objetos dessas duas classes podem ser selecionados por meio da estrutura &lt;code&gt;data.frame[linha, coluna]&lt;/code&gt;, na qual os parâmetros linhas e coluna são os índices desses elementos.&lt;/p&gt;
&lt;p&gt;Para combinar &lt;code&gt;data.frame&lt;/code&gt; e &lt;code&gt;tibble&lt;/code&gt; por linhas ou colunas utilizamos, respectivamente, as funções &lt;code&gt;rbind()&lt;/code&gt; e &lt;code&gt;cbind()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Até aqui, já ficou claro que a escolha ou identificação dos tipos e das classes de dados espaciais e não espaciais é muito importante para sua análise.&lt;/p&gt;
&lt;p&gt;Algumas funções para manipulação de dataframes:&lt;/p&gt;
&lt;p&gt;head() # - Mostra as primeiras 6 linhas.&lt;br /&gt;
tail() # - Mostra as últimas 6 linhas.&lt;br /&gt;
dim() # - Número de linhas e de colunas.&lt;br /&gt;
names() # - Os nomes das colunas (variáveis).&lt;br /&gt;
str() # - Estrutura do data.frame. Mostra, entre outras coisas, as classes de cada coluna.&lt;br /&gt;
cbind() # - Acopla duas tabelas lado a lado.&lt;br /&gt;
rbind() # - Empilha duas tabelas.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Créditos:&lt;br /&gt;
O conteúdo deste documento é, em parte, originalmente produzido por Leonardo S. Barone e Vanderlei de Bastiani. Muito obrigada pelo trabalho e por compartilharem esses documentos!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/leobarone/FLS6397/blob/master/tutorials/tutorial2.Rmd&#34; class=&#34;uri&#34;&gt;https://github.com/leobarone/FLS6397/blob/master/tutorials/tutorial2.Rmd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://vanderleidebastiani.github.io/tutoriais/Introducao_ao_R.html#sobre_o_r&#34; class=&#34;uri&#34;&gt;https://vanderleidebastiani.github.io/tutoriais/Introducao_ao_R.html#sobre_o_r&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Git e Github</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/git_r/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/git_r/</guid>
      <description>
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#definições&#34;&gt;Definições&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#vocabulário-básico-para-uso-do-github&#34;&gt;Vocabulário básico para uso do &lt;code&gt;GitHub&lt;/code&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#como-operacionalizar&#34;&gt;Como operacionalizar?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;definições&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Definições&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; é um sistema de controle de versão por linha de comando. Se você não estiver familiarizado com ele, &lt;code&gt;Git&lt;/code&gt; não tem botões para pressionar, apenas comandos para digitar para controlá-lo, mas ele permite salvar múltiplas versões de um arquivo. A beleza do controle de versão é que se você fizer “alguma besteira”, você pode voltar para a última versão salva. É como chegar a um “ponto de salvamento” em um videogame no qual você pode voltar se seu personagem morrer.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GitHub&lt;/code&gt; é o lugar onde você pode armazenar todas estas versões de seu trabalho. Outros desenvolvedores podem ver, fazer uma cópia, alterar sua cópia e fazer sugestões sobre seu trabalho.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;vocabulário-básico-para-uso-do-github&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Vocabulário básico para uso do &lt;code&gt;GitHub&lt;/code&gt;:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Repositório&lt;/code&gt;: Quando você faz uma conta no &lt;code&gt;Github&lt;/code&gt;, a primeira coisa que você vai querer fazer é criar um repositório (ou repo). Este é o lugar para armazenar todos os seus arquivos para um determinado projeto.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Fork:&lt;/code&gt; Digamos que você realmente gosta do projeto de outra pessoa no &lt;code&gt;GitHub&lt;/code&gt; e você gostaria de fazer uma cópia dele em sua conta para ajustar como você quiser? Bem, esse processo é chamado de &lt;code&gt;forking&lt;/code&gt;. Para fazer isso, encontre um reporte que você gosta e clique no botão &lt;code&gt;fork&lt;/code&gt; no canto direito.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Branch&lt;/code&gt;: Esta é uma “versão paralela” de um projeto que você pode ajustar sem impactar o projeto original.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Remote&lt;/code&gt;: A cópia de seus arquivos que residem no &lt;code&gt;GitHub.com&lt;/code&gt;. É o endereço “destinatário” do seu projeto na plataforma online.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Local:&lt;/code&gt; A cópia de seus arquivos que residem em seu computador. É um espelho do repositório remoto.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Commit&lt;/code&gt;: Uma alteração em um arquivo, geralmente apresentada com uma mensagem sua para indicar o que foi alterado.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Push&lt;/code&gt;: Uma vez que você realize mudanças em seus arquivos locais, você quer enviá-las (ou empurrá-las) para seu repositório remoto, tornando-as disponíveis para outros.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Pull&lt;/code&gt;: Se várias pessoas estiverem trabalhando em seu repositório remoto, elas podem ter feito uma mudança que não está refletida em sua versão local. Você pode &lt;code&gt;puxar&lt;/code&gt; a versão mais nova para o seu computador para trabalhar nela.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;como-operacionalizar&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Como operacionalizar?&lt;/h2&gt;
&lt;p&gt;Vá ao site do &lt;a href=&#34;Github.com&#34;&gt;Github.com&lt;/a&gt; e crie uma conta gratuita. Faça seu login.
Na página dos seus repositórios, crie um repositório e faça uso desse espaço para controlar as versões de projetos diversos.&lt;/p&gt;
&lt;p&gt;Para quem, como eu, não curte muito ter que lembrar comandos em linha o tempo todo, existem aplicativos GUI que permitem a gestão dos repositórios &lt;code&gt;local&lt;/code&gt;e &lt;code&gt;remoto&lt;/code&gt;. O próprio &lt;code&gt;Github&lt;/code&gt; tem um aplicativo desktop para gestão. Entretanto, por achar mais simples (cada um vai se sentir mais confortável com uma interface), estou usando o &lt;a href=&#34;https://www.gitkraken.com/&#34;&gt;GitKraken&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ainda tenho que me acostumar a utilizar o &lt;code&gt;RStudio&lt;/code&gt; para gerenciar versão no &lt;code&gt;Github&lt;/code&gt;. Sim, é possível. Mas até agora achei que o &lt;code&gt;GitKraken&lt;/code&gt; é mais rápido e eficiente.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Créditos&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://amber.rbind.io/2016/12/19/website/&#34; class=&#34;uri&#34;&gt;https://amber.rbind.io/2016/12/19/website/&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Fonte interessante: &lt;a href=&#34;https://happygitwithr.com/&#34;&gt;Happy Git with R&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introdução à Análise de Dados</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/intro_dataana/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/intro_dataana/</guid>
      <description>
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#análise-de-dados-com-r&#34;&gt;Análise de dados com R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;análise-de-dados-com-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Análise de dados com R&lt;/h2&gt;
&lt;p&gt;A ciência dos dados é um campo enorme, e não há como dominá-lo neste curso. Vamos explorar conceitos, fundamentos e desenvolver habilidades de análise de dados para suporte à tomada de decisão. A análise de dados tem grande potencial para ajudar as empresas e os tomadores de decisão a se concentrarem nas informações mais importantes dos dados que coletaram sobre o comportamento de seus clientes, clientes potenciais, externalidades, bem estar organizacional dentre outras dimensões. Essa abordagem permite a geração de informações a partir dos dados disponíveis que, inicialmente coletados, não revelam de forma clara e eficiente.&lt;/p&gt;
&lt;p&gt;O modelo conceitual da análise de dados contempla:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/dataR.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Modelo de Data Science&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Em síntese, são necessárias etapas de importação, organização, transformação, visualização e modelagem. Uma etapa usualmente negligenciada pelos acadêmicos é a comunicação. Entretanto, nas organizações, a capacidade de comunicação é essencial para garantir eficácia do processo de investigação dos problemas por meio de dados.&lt;/p&gt;
&lt;p&gt;Quando seus dados estão organizados (“tidy”), tem-se uma estrutura onde cada coluna é uma variável, e cada linha é uma observação. Eventualmente são necessárias transformações dos dados para composição de indicadores de interesse ou para agregação/desagregação da informação. As etapas de organização e transformação dos dados, em conjunto, são denominadas “Data Wrangling”. Essa denominação traz luz aos desafios que o processamento de dados implica em sua organização.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/data_cowboy.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Modelo de Data Science&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A visão é um dos sentidos humanos mais importantes. A capacidade de visualizar a informação é interessante para: confirmar as hipóteses iniciais, identificar processos não esperados e levantar novas questões sobre os dados. Uma boa visualização também pode sugerir que você está fazendo a pergunta errada, ou que você precisa coletar dados diferentes. As visualizações podem surpreendê-lo e dependem da percepção e da interpretação humana, apresentando grande valor para a gestão organizacional.&lt;/p&gt;
&lt;p&gt;A perspectiva mais quantitativa da análise de dados contempla a modelagem. Modelos são ferramentas complementares à visualização. Uma vez que você tenha organizado o problema em investigação e desenhado hipóteses iniciais, é possível utilizar um modelo para respondê-las. Os modelos são uma ferramenta fundamentalmente matemática ou computacional, portanto, escaláveis. Entretanto, apresentam poucos elementos constitutivos da percepção humana e, portanto, do mundo real. Entretanto, mesmo que modelos não representem adequadamente os fenômenos e processos humanos, geralmente é mais barato comprar mais computadores do que comprar mais cérebros! Modelos são repletos de premissas e suposições, limitando a capacidade de representação da realidade complexa e subjetiva. Além disso, devido à sua própria natureza, um modelo não pode questionar suas próprias premissas - isso significa que um modelo não pode surpreendê-lo -, o que implica em riscos importantes de limitações do entendimento dos problemas em investigação.&lt;/p&gt;
&lt;p&gt;O último passo da análise de dados é a comunicação, uma parte absolutamente crítica de qualquer projeto. Não importa se seus modelos e visualização apresentam excelência e o tenham levado a compreender os dados, se você não puder comunicar seus resultados a outras pessoas.&lt;/p&gt;
&lt;p&gt;Neste curso não tenho a pretenção de tratar dados em escala (big data) ou considerar diferentes linguagens de programação. Ainda, os conceitos, fundamentos e ferramentas explorados neste curso apresentam caráter exploratório, ou seja, permitem a elaboração de hipóteses. Seria necessário um curso bem mais extenso para apresentar a implementação computacional de instrumentos de análise confirmatória.&lt;/p&gt;
&lt;p&gt;Assim, sairemos deste curso com mais perguntas do que respostas, mas com mais maturidade, capacidade de análise e crítica sobre os fenômenos organizacionais.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Como coletar, manipular e representar dados de Tweets</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/twitter/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/twitter/</guid>
      <description>
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#análise-de-sentimento-por-meio-de-dados-do-twitter&#34;&gt;Análise de sentimento por meio de dados do Twitter&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#atividades-preliminares&#34;&gt;Atividades preliminares&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#configure-o-aplicativo-do-twitter&#34;&gt;Configure o aplicativo do Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#analisar-e-baixar-dados-do-twitter&#34;&gt;Analisar e baixar dados do Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;análise-de-sentimento-por-meio-de-dados-do-twitter&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Análise de sentimento por meio de dados do Twitter&lt;/h2&gt;
&lt;p&gt;Nesta lição, você explorará a análise dos dados de mídia social acessados a partir do twitter, em R. Você usará a &lt;code&gt;API RESTful&lt;/code&gt; do &lt;code&gt;Twitter&lt;/code&gt; para acessar dados sobre os usuários do twitter e sobre o que eles estão tweetando.&lt;/p&gt;
&lt;div id=&#34;atividades-preliminares&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Atividades preliminares&lt;/h3&gt;
&lt;p&gt;Para começar, você precisará:
1. Criar uma conta no Twitter se você ainda não tiver uma.
2. &lt;a href=&#34;https://cran.r-project.org/web/packages/rtweet/vignettes/auth.html&#34;&gt;Usando sua conta, configure um aplicativo que você usará para acessar o Twitter a partir do R&lt;/a&gt;
3. Baixe e instale os pacotes &lt;code&gt;rtweet&lt;/code&gt; e &lt;code&gt;tidytext&lt;/code&gt; para &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Você está pronto para começar a consultar a &lt;code&gt;API&lt;/code&gt; do &lt;code&gt;Twitter&lt;/code&gt; para ver o que você pode aprender a partir dos tweets!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;configure-o-aplicativo-do-twitter&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Configure o aplicativo do Twitter&lt;/h3&gt;
&lt;p&gt;Vamos começar montando um aplicativo no twitter que você pode usar para acessar os tweets. Para configurar seu aplicativo, siga a documentação do &lt;code&gt;rtweet&lt;/code&gt; aqui.&lt;/p&gt;
&lt;p&gt;Com o aplicativo do twitter configurado, você está pronto para acessar tweets pelo R. Você usará o pacote &lt;code&gt;rtweet&lt;/code&gt; para fazer isso.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# carregar a biblioteca do twitter - a biblioteca do rtweet é recomendada
library(rtweet)
# plotting and pipes - tidyverse!
library(ggplot2)
library(dplyr)
# text mining library
library(tidytext)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Estas keys estão localizadas em suas configurações do aplicativo do twitter na guia keys e Tokens de Acesso. Você precisará copiá-las em seu código como abaixo substituindo o texto de preenchimento que usei nesta lição pelo texto que o twitter lhe dá em seu aplicativo.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# whatever name you assigned to your created app
appname &amp;lt;- &amp;quot;your-app-name&amp;quot;

## api key (example below is not a real key)
key &amp;lt;- &amp;quot;yourLongApiKeyHere&amp;quot; # Não está ativo

## api secret (example below is not a real key)
secret &amp;lt;- &amp;quot;yourSecretKeyHere&amp;quot; # Não está ativo

access_token &amp;lt;- &amp;quot;yourTokenHere&amp;quot; # Não está ativo
access_secret &amp;lt;- &amp;quot;yourSecretTokenHere&amp;quot; # Não está ativo&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Em seguida, você precisará passar um conjunto de keys para a API.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create token named &amp;quot;twitter_token&amp;quot;
twitter_token &amp;lt;- create_token(
  app = appname,
  consumer_key = key,
  consumer_secret = secret,
  access_token = access_token,
  access_secret = access_secret)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finalmente, você pode criar um token que autentique o acesso aos tweets! Poste um tweet como teste. Lembre-se que o tweet precisa ser de 140 caracteres ou menos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# post a tweet from R
post_tweet(&amp;quot;Olá!&amp;quot;)
## your tweet has been posted!&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;analisar-e-baixar-dados-do-twitter&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Analisar e baixar dados do Twitter&lt;/h3&gt;
&lt;div id=&#34;baixar-textos-dos-tweets-considerando-um-termo-específico&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Baixar textos dos tweets considerando um termo específico&lt;/h4&gt;
&lt;p&gt;Agora você está pronto para procurar no twitter por tweets recentes! Comecemos por encontrar todos os tweets que usam o hashtag &lt;code&gt;#rstats&lt;/code&gt;. Observe abaixo que você usa a função &lt;code&gt;rtweet::search_tweets()&lt;/code&gt; para procurar. &lt;code&gt;search_tweets()&lt;/code&gt; requer os seguintes argumentos:
1. &lt;strong&gt;q&lt;/strong&gt;: o termo que você deseja procurar
2. &lt;strong&gt;n&lt;/strong&gt;: o número de tweets que você quer que sejam devolvidos. Você pode solicitar até um máximo de 18.000 tweets.&lt;/p&gt;
&lt;p&gt;Para ver que outros argumentos você pode usar com esta função, use a ajuda R: &lt;code&gt;?search_tweets()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## search for 500 tweets using the #rstats hashtag
rstats_tweets &amp;lt;- search_tweets(q = &amp;quot;#rstats&amp;quot;, n = 500)
# view the first 3 rows of the dataframe
head(rstats_tweets, n = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;retweets&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Retweets&lt;/h4&gt;
&lt;p&gt;Um &lt;code&gt;retweet&lt;/code&gt; é quando você ou outra pessoa compartilha o tweet de alguém para que seus seguidores possam vê-lo. É semelhante ao compartilhamento no Facebook onde você pode adicionar uma citação ou texto acima do retweet se quiser ou apenas compartilhar o post. Vamos usar a mesma consulta que você usou acima, mas desta vez ignore todos os retweets definindo o argumento &lt;code&gt;include_rts&lt;/code&gt;. para &lt;code&gt;FALSE&lt;/code&gt;. Você pode obter as estatísticas de tweet/retweet de seu dataframe, separadamente.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# find recent tweets with #rstats but ignore retweets
rstats_tweets &amp;lt;- search_tweets(&amp;quot;#rstats&amp;quot;, n = 500,
                             include_rts = FALSE)
# view top 2 rows of data
head(rstats_tweets, n = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;quem-está-twitando&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Quem está twitando?&lt;/h4&gt;
&lt;p&gt;A seguir, vamos descobrir quem está tweetando sobre R usando o hashtag &lt;code&gt;#rstats&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# view column with screen names - top 6
head(rstats_tweets$screen_name)
## [1] &amp;quot;tangming2005&amp;quot;   &amp;quot;tangming2005&amp;quot;   &amp;quot;noah_greifer&amp;quot;   &amp;quot;yoniceedee&amp;quot;    
## [5] &amp;quot;yoniceedee&amp;quot;     &amp;quot;peterlovesdata&amp;quot;
# get a list of unique usernames
unique(rstats_tweets$screen_name)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Você também pode usar a função &lt;code&gt;search_users()&lt;/code&gt; para ver o que os usuários estão tweetando usando uma hashtag específica. Esta função retorna apenas um data.frame dos usuários e informações sobre suas contas.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# what users are tweeting with #rstats
users &amp;lt;- search_users(&amp;quot;#rstats&amp;quot;,
                      n = 500)
# just view the first 2 users - the data frame is large!
head(users, n = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;localização-dos-usuários-do-twitter&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Localização dos usuários do Twitter&lt;/h4&gt;
&lt;p&gt;Vamos aprender um pouco mais sobre essas pessoas tweetando sobre &lt;code&gt;R&lt;/code&gt;. Primeiro, de onde elas são?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# how many locations are represented
length(unique(users$location))
## [1] 299

users %&amp;gt;%
  ggplot(aes(location)) +
  geom_bar() + coord_flip() +
      labs(x = &amp;quot;Count&amp;quot;,
      y = &amp;quot;Location&amp;quot;,
      title = &amp;quot;Twitter users - unique locations &amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos gerar uma análise considerando a contagem de observações e plotar apenas as localidades mais frequentes. Para isso, utilize a função &lt;code&gt;top_n()&lt;/code&gt;. Observe que neste caso você está agrupando seus dados por usuário. Assim, &lt;code&gt;top_n()&lt;/code&gt; retornará locais com pelo menos 15 usuários associados a ele.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;users %&amp;gt;%
  count(location, sort = TRUE) %&amp;gt;%
  mutate(location = reorder(location, n)) %&amp;gt;%
  top_n(20) %&amp;gt;%
  ggplot(aes(x = location, y = n)) +
  geom_col() +
  coord_flip() +
      labs(x = &amp;quot;Count&amp;quot;,
      y = &amp;quot;Location&amp;quot;,
      title = &amp;quot;Where Twitter users are from - unique locations &amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Parece que temos alguns valores de &lt;code&gt;NA&lt;/code&gt; ou nenhum valor de dados em sua lista. Vamos remover aqueles com &lt;code&gt;na.omit()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;users %&amp;gt;%
  count(location, sort = TRUE) %&amp;gt;%
  mutate(location = reorder(location,n)) %&amp;gt;%
  na.omit() %&amp;gt;%
  top_n(20) %&amp;gt;%
  ggplot(aes(x = location,y = n)) +
  geom_col() +
  coord_flip() +
      labs(x = &amp;quot;Location&amp;quot;,
      y = &amp;quot;Count&amp;quot;,
      title = &amp;quot;Twitter users - unique locations &amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Olhando para seus dados, quais outras análises você sugere? Existem 314 locais únicos em sua lista. Entretanto, nem todos usuários especificaram suas localizações de maneira semelhante. Por exemplo, alguns acabaram de identificar seu país: Estados Unidos, por exemplo, e outros especificaram uma cidade e um estado. Você pode querer fazer uma limpeza destes dados para poder traçar melhor esta distribuição - especialmente se você quiser criar um mapa destes dados!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introdução ao RMarkdown</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/intro_rmarkdown/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/intro_rmarkdown/</guid>
      <description>
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/datatables-css/datatables-crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/datatables-binding/datatables.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/dt-core/css/jquery.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/dt-core/css/jquery.dataTables.extra.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/dt-core/js/jquery.dataTables.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
  &lt;link rel=&#34;stylesheet&#34; href=&#34;https://retaoliveira.github.io/assets/css/custom.css&#34; type=&#34;text/css&#34; /&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tldr&#34;&gt;TL;DR&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#o-que-é-markdown&#34;&gt;O que é Markdown?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rmarkdown&#34;&gt;RMarkdown&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#formatação-de-texto&#34;&gt;Formatação de texto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#incluindo-tabelas&#34;&gt;Incluindo tabelas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#incluindo-figuras&#34;&gt;Incluindo figuras&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#chunks&#34;&gt;&lt;code&gt;chunks&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#visualização&#34;&gt;Visualização&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#metadados---cabeçalho&#34;&gt;Metadados - Cabeçalho&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#formatos-de-output&#34;&gt;Formatos de output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#divulgando&#34;&gt;Divulgando&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rode-o-seu-primeiro-documento-em-rmarkdown&#34;&gt;Rode o seu primeiro documento em RMarkdown!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;Assita o vídeo! É impactante, baseado em fatos reais!&lt;/p&gt;
&lt;iframe width=&#34;738&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/s3JldKoA0zw&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;
&lt;/iframe&gt;
&lt;div id=&#34;tldr&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;TL;DR&lt;/h1&gt;
&lt;p&gt;RMarkdown é uma linguagem para edição de textos que segue a sintaxe da linguagem Markdown. Sínteses e informações sobre essa linguagem RMarkdown podem ser encontradas nas seguintes cheatsheet que podem ser obtidas por meio do &lt;a href=&#34;https://cefetmgbr-my.sharepoint.com/:f:/g/personal/renataoliveira_cefetmg_br/EjcsMqE7jmFHqGVdSfXuwBoBp66Q0iX1tWwDX8L3kMiyHQ?e=RSoWLP&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;o-que-é-markdown&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;O que é Markdown?&lt;/h2&gt;
&lt;p&gt;Segundo o criador da linguagem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Markdown is a text-to-HTML conversion tool for web writers. Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML).&lt;/p&gt;
&lt;p&gt;John Gruber&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dicas de sintaxe da linguagem Markdown podem ser encontradas em:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.da2k.com.br/2015/02/08/aprenda-markdown/&#34;&gt;Sintaxe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/luong-komorebi/Markdown-Tutorial/blob/master/README_pt-BR.md&#34;&gt;Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;rmarkdown&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;RMarkdown&lt;/h2&gt;
&lt;p&gt;Vou colocar aqui algumas informações-chave sobre a construção geral de informações a partir do uso do RMarkdown. Entretanto, informações adicionais podem ser obtidas de maneira detalhada no site:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cursos.leg.ufpr.br/prr/capDocDin.html&#34;&gt;Documentos dinâmicos no R by Fernando Mayer &amp;amp; Walmes Zeviani&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;formatação-de-texto&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Formatação de texto&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Textos em itálico são produzidos com um par de asteriscos &lt;code&gt;*Itálico*&lt;/code&gt; ou de underscores &lt;code&gt;_Itálico_&lt;/code&gt;&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Textos em negrito são produzidos com dois pares de asteriscos: &lt;code&gt;**Negrito**&lt;/code&gt;&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Um par de acentos til produz texto subscrito: &lt;code&gt;CO~2~&lt;/code&gt; vira CO2&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Um par de acentos circunflexos produz texto sobrescrito: &lt;code&gt;x^2^&lt;/code&gt; vira x2&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Hyperlinks são criados com a sintaxe &lt;code&gt;[texto](link): Clique [aqui](https://www.google.com/)&lt;/code&gt; vira Clique aqui&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Imagens são inseridas com a sintaxe &lt;code&gt;![texto opcional](pasta/imagem.jpg)&lt;/code&gt; ou &lt;code&gt;![texto opcional](link para imagem)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;seções-e-subseções&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Seções e subseções&lt;/h4&gt;
&lt;p&gt;Para demarcar seções e subseções, utilize os &lt;code&gt;hashtags&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;listas-e-ordenação&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Listas e ordenação&lt;/h4&gt;
&lt;p&gt;Basta enumerar:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;incluindo-tabelas&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Incluindo tabelas&lt;/h3&gt;
&lt;p&gt;Existem duas boas opções para produzir tabelas elegantes em documentos R Markdown:&lt;/p&gt;
&lt;p&gt;A função &lt;code&gt;knitr::kable()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% 
  head() %&amp;gt;% 
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;right&#34;&gt;Sepal.Length&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Sepal.Width&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Petal.Length&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Petal.Width&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Species&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;5.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;4.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;4.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;4.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;5.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;5.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A função &lt;code&gt;knitr::kable()&lt;/code&gt; acompanhada do pacote &lt;code&gt;kableExtra&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% 
  head() %&amp;gt;% 
  kableExtra::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Sepal.Length
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Sepal.Width
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Petal.Length
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Petal.Width
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Species
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5.1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
setosa
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4.9
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
setosa
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4.7
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
setosa
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4.6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
setosa
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
setosa
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5.4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.9
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.7
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
setosa
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;E tabelas interativas por meio do pacote &lt;code&gt;DT&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% 
  head() %&amp;gt;% 
  DT::datatable()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:auto;&#34; class=&#34;datatables html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;filter&#34;:&#34;none&#34;,&#34;data&#34;:[[&#34;1&#34;,&#34;2&#34;,&#34;3&#34;,&#34;4&#34;,&#34;5&#34;,&#34;6&#34;],[5.1,4.9,4.7,4.6,5,5.4],[3.5,3,3.2,3.1,3.6,3.9],[1.4,1.4,1.3,1.5,1.4,1.7],[0.2,0.2,0.2,0.2,0.2,0.4],[&#34;setosa&#34;,&#34;setosa&#34;,&#34;setosa&#34;,&#34;setosa&#34;,&#34;setosa&#34;,&#34;setosa&#34;]],&#34;container&#34;:&#34;&lt;table class=\&#34;display\&#34;&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt; &lt;\/th&gt;\n      &lt;th&gt;Sepal.Length&lt;\/th&gt;\n      &lt;th&gt;Sepal.Width&lt;\/th&gt;\n      &lt;th&gt;Petal.Length&lt;\/th&gt;\n      &lt;th&gt;Petal.Width&lt;\/th&gt;\n      &lt;th&gt;Species&lt;\/th&gt;\n    &lt;\/tr&gt;\n  &lt;\/thead&gt;\n&lt;\/table&gt;&#34;,&#34;options&#34;:{&#34;columnDefs&#34;:[{&#34;className&#34;:&#34;dt-right&#34;,&#34;targets&#34;:[1,2,3,4]},{&#34;orderable&#34;:false,&#34;targets&#34;:0}],&#34;order&#34;:[],&#34;autoWidth&#34;:false,&#34;orderClasses&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Informações sobre a configuração dos packages considerados porm ser encontrados nos links: &lt;a href=&#34;https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html&#34;&gt;&lt;code&gt;kableExtra&lt;/code&gt;&lt;/a&gt;, `&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;incluindo-figuras&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Incluindo figuras&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/rmarkdown_rockstar.png&#34; alt=&#34;Figura 1: RMarkdown&#34; /&gt;
Eu prefiro incluir figuras por meio de &lt;code&gt;chunk&lt;/code&gt;, pois a parametrização do &lt;code&gt;chunk&lt;/code&gt; permite configurar a figura:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::include_graphics(img1_path)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;http://zevross.com/blog/2017/06/19/tips-and-tricks-for-working-with-images-and-figures-in-r-markdown-documents/&#34;&gt;Dicas:&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;chunks&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;code&gt;chunks&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;chunks&lt;/code&gt; são blocos de código que podem ser incluídos e rodados em um documento &lt;code&gt;.Rmd&lt;/code&gt;. Os chunks precisam de uma formatação específicica e podem ser escritos em diferentes linguagens. A forma mais rápida de incluir um chunk para edição em &lt;code&gt;R&lt;/code&gt; é o atalho &lt;code&gt;Ctrl + Alt + i&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O &lt;code&gt;chunk&lt;/code&gt; deve ser iniciado por ```&lt;code&gt;{r }&lt;/code&gt; e alguns parâmetros definem opções para os &lt;code&gt;chunks&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;eval&lt;/code&gt;: tipo logical. Executar (TRUE) ou não (FALSE) o código do &lt;code&gt;chunk&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;echo&lt;/code&gt;: tipo logical. Incluir o código do &lt;code&gt;chunk&lt;/code&gt; ou não no documento compilado.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;warning&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; e &lt;code&gt;error&lt;/code&gt;: tipo logical. Caso &lt;code&gt;error = TRUE&lt;/code&gt;, o documento será compilado mesmo que o chunk retorne um erro.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;include&lt;/code&gt;: tipo logical. Controla se o &lt;code&gt;chunk&lt;/code&gt; e o output estarão presentes no documento final.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;cache&lt;/code&gt;: tipo logical. Controla se o &lt;code&gt;chunk&lt;/code&gt; poderá usar cache para criar uma pasta com arquivos cacheados. Útil para chunks de códigos que levam muito tempo para rodar.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- rnorm(30)
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  0.85301979 -1.20670342 -2.22819565 -1.64121807 -0.01532080 -0.46151015
##  [7]  0.57836682 -0.86865502  0.07392585 -1.14114997  0.28009723  0.02311227
## [13]  0.54236216 -0.54058459 -0.69211749  0.52809306  2.62622924 -0.08507349
## [19]  1.65361651 -0.46970572  1.59696520 -0.23543453  0.16921561 -0.79719001
## [25]  0.63282570  1.27541352  0.60651845 -0.32445256  0.69333907  0.23582679&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para definir uma opção da mesma maneira para todos os &lt;code&gt;chunks&lt;/code&gt; do documento, é possível criar um &lt;code&gt;chunk&lt;/code&gt; com o código &lt;code&gt;knitr::opts_chunk$set()&lt;/code&gt;, como no exemplo abaixo:&lt;/p&gt;
&lt;p&gt;As opções gerais de &lt;code&gt;chunks&lt;/code&gt; podem ser encontradas no &lt;a href=&#34;https://yihui.org/knitr/options/&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;visualização&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Visualização&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(x)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/intro_rmarkdown_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Também podemos fazer um histograma dessa variável simulada&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hist(x)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/intro_rmarkdown_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;metadados---cabeçalho&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Metadados - Cabeçalho&lt;/h3&gt;
&lt;div id=&#34;yaml-yet-another-markup-language&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;code&gt;YAML&lt;/code&gt; (Yet Another Markup Language)&lt;/h4&gt;
&lt;p&gt;No &lt;code&gt;YAML&lt;/code&gt;, os dados são escritos em forma de lista aninhada. Os metadados em &lt;code&gt;YAML&lt;/code&gt; são colocados sempre no início de um documento, e são delimitados por &lt;code&gt;---&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;formatos-de-output&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Formatos de output&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Compilar um documento em RMarkdown
&lt;code&gt;knitr&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Na &lt;a href=&#34;https://rmarkdown.rstudio.com/gallery.html&#34;&gt;galeria do RStudio&lt;/a&gt; diferentes estruturas de informação produzida por meio de &lt;code&gt;RMarkdown&lt;/code&gt; podem ser encontradas!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;beamer_presentation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;html_document&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ioslides_presentation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pdf_document&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;slidy_document&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;powerpoint_presentation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;word_document&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;output:
  html_document:
    toc: true
    number_sections: yes
  pdf_document:
    keep_tex: true&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;divulgando&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Divulgando&lt;/h3&gt;
&lt;p&gt;No RStudio, crie um novo documento &lt;code&gt;R Markdown&lt;/code&gt; escolhendo &lt;code&gt;Arquivo | Novo | R Markdown&lt;/code&gt;.
Clique no botão &lt;code&gt;Knit HTML&lt;/code&gt; na barra de ferramentas do doc para visualizar seu documento.
Na janela de pré-visualização, clique no botão &lt;code&gt;Publicar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;É um processo em duas etapas. Na primeira etapa, você precisa registrar uma conta &lt;code&gt;RPubs&lt;/code&gt; ou fazer o login, caso já tenha uma. Você escreve o título de seu documento e dá uma breve descrição (para que outros possam encontrar seu trabalho a partir da busca).&lt;/p&gt;
&lt;p&gt;Uma vez terminado e clicando no botão &lt;code&gt;Continue&lt;/code&gt; na parte inferior, você irá diretamente para o artigo publicado.&lt;/p&gt;
&lt;p&gt;Você pode optar por atualizar seu conteúdo.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;rode-o-seu-primeiro-documento-em-rmarkdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Rode o seu primeiro documento em RMarkdown!&lt;/h1&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Salve o &lt;a href=&#34;https://cefetmgbr-my.sharepoint.com/:u:/g/personal/renataoliveira_cefetmg_br/ESP5b0WfqYJFplhjSRiciG0BNKQZnv2HzbHnPBxZEBr3Ew?e=gVcWCQ&#34;&gt;arquivo&lt;/a&gt; em um diretório que você consiga acessar depois. Sugiro criar um diretório para essa finalidade.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Abra o arquivo no RStudio: &lt;code&gt;File | Open File&lt;/code&gt; e navegue até o arquivo &lt;code&gt;01-covid.Rmd&lt;/code&gt; selecionando-o.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Você identificará o arquivo por meio do &lt;code&gt;YAML&lt;/code&gt; com &lt;code&gt;title: &#34;Mortes por COVID-19&#34;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Verifique se houve alguma mensagem abaixo da barra de ferramentas da janela de edição do &lt;code&gt;RMarkdown&lt;/code&gt; para que sejam instalados &lt;code&gt;packages&lt;/code&gt; necessários para rodar esse &lt;code&gt;.Rmd&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Clique no botão de &lt;code&gt;knitr&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Aprecie o seu primeiro documento!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Como acessar o tutorial da disciplina no swirl</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/swirl/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/swirl/</guid>
      <description>
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Fiquei pensando em como posso ajudar os estudantes no desenvolvimento de competências no R com tão pouco tempo e remotamente. Uma possibilidade que consegui viabilizar são tutoriais interativos. São atividades eletivas também, mas FORTEMENTE recomendadas! No site os estudantes podem encontrar as informações necessárias para utilizar as funções e podem sempre consultar o “oráculo” universal Google.&lt;/p&gt;
&lt;p&gt;Os estudantes um procedimento breve para conseguirem abrir o tutorial:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Salvar o arquivo nesta mensagem em um diretório em seu computador.&lt;/li&gt;
&lt;li&gt;Abrir o RStudio e procedam com a instalação do package swirl: &lt;code&gt;install.packages(&#34;swirl&#34;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Carregar a biblioteca do swirl: &lt;code&gt;library(swirl)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Instalar o tutorial: &lt;code&gt;install_course()&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;uma janela de navegação permitirá a seleção do arquivo desta mensagem em seu computador.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Abrir o menu de tutoriais &lt;code&gt;swirl::swirl()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Digitar o número referente à alternantiva R_business. Caso essa opção não esteja disponível, digitar o último valor que o tutorial aparecerá no novo menu.&lt;/li&gt;
&lt;li&gt;Selecionar 1: &lt;code&gt;introR&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Mãos à obra! Bom tutorial!!!! Por enquanto são cinco tutoriais autoexplicativos e interativo.&lt;/p&gt;
&lt;p&gt;In a &lt;code&gt;chunk&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;swirl&amp;quot;)
library(swirl)

install_course()
swirl()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O arquivo pode ser acessado no &lt;a href=&#34;https://cefetmgbr-my.sharepoint.com/:u:/g/personal/renataoliveira_cefetmg_br/ERP-1p3qFR1MiftEt5n0kwkBwzxgRSVTlLFeRKe9QLKXIQ?e=0NopHG&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;iframe width=&#34;1000&#34; height=&#34;542&#34; src=&#34;https://www.youtube.com/embed/HaZ4p16sv6M&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;
&lt;/iframe&gt;
&lt;p&gt;Bonus: Existem vários cursos disponíveis online. Para acessá-los, veja o &lt;a href=&#34;http://swirlstats.com/scn/&#34;&gt;Swirl Course Network&lt;/a&gt;. A instalação é feita também com a função &lt;code&gt;install_course()&lt;/code&gt;, mas nesse caso você precisa digitar o nome do curso como em:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;swirl::install_course(&amp;quot;A_(very)_short_introduction_to_R&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Introdução à estatística descritiva</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/estatistica/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/estatistica/</guid>
      <description>&lt;h2 id=&#34;estatística-descritiva-para-sumarização-de-dados-com-o-r&#34;&gt;Estatística descritiva para sumarização de dados com o R&lt;/h2&gt;
&lt;p&gt;Já apresentamos os operadores relativos às estatísticas descritivas básicas. Segue uma síntese:&lt;/p&gt;
&lt;h3 id=&#34;operadores-aritméticos-r&#34;&gt;Operadores aritméticos R&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operador&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;x + y&lt;/td&gt;
&lt;td&gt;Adição de x com y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x - y&lt;/td&gt;
&lt;td&gt;Subtração de y em x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x * y&lt;/td&gt;
&lt;td&gt;Multiplicação de x e y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x / y&lt;/td&gt;
&lt;td&gt;Divisão de x por y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xy ou x**y&lt;/td&gt;
&lt;td&gt;x elevado a y-ésima potência&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x%%y&lt;/td&gt;
&lt;td&gt;Resto da divisão de x por y (módulo)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x%/%y&lt;/td&gt;
&lt;td&gt;Parte inteira da divisão de x por y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;operadores-de-comparação-no-r&#34;&gt;Operadores de comparação no R&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operador&lt;/th&gt;
&lt;th&gt;Significado&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;==&lt;/td&gt;
&lt;td&gt;igual a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!=&lt;/td&gt;
&lt;td&gt;diferente de&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;maior que&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;menor que&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;maior ou igual a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;menor ou igual a&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Os operadores de comparação sempre retornam um valor lógico TRUE ou FALSE.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;operadores-lógicos-no-r&#34;&gt;Operadores lógicos no R&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operador&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;th&gt;Explicação&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&lt;/td&gt;
&lt;td&gt;AND lógico&lt;/td&gt;
&lt;td&gt;Versão vetorizada. Compara dois elementos do tipo vetor e retorna um vetor de TRUEs e FALSEs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;AND lógico&lt;/td&gt;
&lt;td&gt;Versão não-vetorizada. Compara apenas o primeiro valor de cada vetor, retornando um valor lógico.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;td&gt;OR lógico&lt;/td&gt;
&lt;td&gt;Versão vetorizada. Compara dois elementos do tipo vetor e retorna um vetor de TRUEs e FALSEs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;||&lt;/td&gt;
&lt;td&gt;OR lógico&lt;/td&gt;
&lt;td&gt;Versão não-vetorizada. Compara apenas o primeiro valor de cada vetor, retornando um valor lógico.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;NOT lógico&lt;/td&gt;
&lt;td&gt;Negação lógica. Retorna um valor lógico único ou um vetor de TRUE / FALSE.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xor&lt;/td&gt;
&lt;td&gt;XOR&lt;/td&gt;
&lt;td&gt;Ou Exclusivo. Retorna valor lógico TRUE se ambos os valores de entrada forem diferentes entre si, e retorna FALSE se os valores forem iguais.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Também conhecidos como operadores booleanos, permitem trabalhar com múltiplas condições relacionais na mesma expressão, e retornam valores lógicos verdadeiro ou falso.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;algumas-funções-estatísticas-para-sumarização-de-dados&#34;&gt;Algumas funções estatísticas para sumarização de dados&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Funções&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;mínimo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;máximo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;range()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;amplitude&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mean()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;média&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;soma&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;median()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;mediana&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sd()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;desvio-padrão&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;IQR()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;intervalo interquantil&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;quantile()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;quartis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;var()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;variância&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cor()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;correlação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;summary()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;métricas de sumarização&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rowMeans()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;média das linhas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;colMeans()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;média das colunas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rowSums()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;soma das linhas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;colSums()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;soma das colunas&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;tratamento-de-dados-omissos&#34;&gt;Tratamento de dados omissos&lt;/h3&gt;
&lt;p&gt;O R permite que sejam armazenados, em vetores e data.frames, o valor &lt;code&gt;NA&lt;/code&gt; (Not Available), que representa dados que ainda não são conhecidos.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;x == NA&lt;/code&gt; trará sempre um resultado FALSE, mesmo que &lt;code&gt;x&lt;/code&gt; não seja conhecido.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;hr&gt;
&lt;p&gt;
&lt;h2 id=&#34;atividades-de-verificação-de-aprendizagem&#34;&gt;Atividades de verificação de aprendizagem&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Questão 1:&lt;/strong&gt;
Abra o &lt;code&gt;data.frame&lt;/code&gt; &amp;ldquo;iris&amp;rdquo;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-{r&#34; data-lang=&#34;{r&#34;&gt;a &amp;lt;- iris
class(iris)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;a. Calcule estatísticas básicas de cada variável. Copie e cole no Canvas (código e resultado).&lt;/p&gt;
&lt;p&gt;Veja o exemplo:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-{r&#34; data-lang=&#34;{r&#34;&gt;summary(iris$Sepal.Length)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;b. Para que serve p símbolo &lt;code&gt;$&lt;/code&gt; após o nome do data.frame?
c. Por meio das funções &lt;code&gt;hist()&lt;/code&gt; e &lt;code&gt;boxplot()&lt;/code&gt;, respectivamente, gere um exemplo de cada gráfico para a variável que você escolher. Copie e cole no Canvas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Overview - Tidyverse</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/tidyverse/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/tidyverse/</guid>
      <description>
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#instalação-e-uso-do-package-tidyverse&#34;&gt;Instalação e uso do Package &lt;code&gt;tidyverse&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#estrutura-básica-do-tidyverse&#34;&gt;Estrutura básica do tidyverse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#importação-de-dados&#34;&gt;Importação de dados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wrangle&#34;&gt;Wrangle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#programa&#34;&gt;Programa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#modelo&#34;&gt;Modelo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#alguns-links-interessantes-para-aprender-tidyverse&#34;&gt;Alguns links interessantes para aprender &lt;code&gt;tidyverse&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;instalação-e-uso-do-package-tidyverse&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Instalação e uso do Package &lt;code&gt;tidyverse&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Instale todos os pacotes no tidyverse executando &lt;code&gt;install.packages(&#34;tidyverse&#34;)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Execute a &lt;code&gt;library(tidyverse)&lt;/code&gt; para carregar o núcleo do tidyverse e torná-lo disponível em sua sessão R atual.&lt;/p&gt;
&lt;p&gt;Saiba mais sobre o pacote tidyverse em &lt;a href=&#34;https://tidyverse.tidyverse.org&#34;&gt;https://tidyverse.tidyverse.org&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;estrutura-básica-do-tidyverse&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Estrutura básica do tidyverse&lt;/h3&gt;
&lt;p&gt;A estrutura básica do tidyverse inclui os pacotes que você provavelmente usará nas análises de dados. Os seguintes pacotes estão incluídos:&lt;/p&gt;
&lt;div id=&#34;ggplot2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;ggplot2&lt;/h4&gt;
&lt;p&gt;O &lt;code&gt;ggplot2&lt;/code&gt; é um sistema de criação gráfica declarativa, baseado na Gramática de gráficos. Você fornece os dados, diz ao &lt;code&gt;ggplot2&lt;/code&gt; como mapear variáveis para a estética, quais elementos gráficos utilizar, e ele cuida dos detalhes.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;dplyr&lt;/code&gt; fornece uma gramática de manipulação de dados, fornecendo um conjunto consistente de comandos que resolvem os desafios mais comuns de manipulação de dados.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tidyr&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;tidyr&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;tidyr&lt;/code&gt; fornece um conjunto de funções que ajudam você a obter organizar os dados. Dados organizados são dados com uma estrutura consistente: em resumo, cada variável vai em uma coluna, e cada coluna é uma variável.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;readr&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;readr&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;readr&lt;/code&gt; fornece uma maneira rápida e amigável de ler dados tabulares (como csv, tsv, e fwf). Ele é projetado para analisar de forma flexível muitos tipos de dados.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;purrr&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;purrr&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;purrr&lt;/code&gt; melhora o conjunto de ferramentas de programação funcional (FP) do &lt;code&gt;R&lt;/code&gt;, fornecendo um conjunto completo e consistente de ferramentas para trabalhar com funções e vetores. Uma vez que você domina os conceitos básicos, o &lt;code&gt;purrr&lt;/code&gt; permite que você substitua muitos &lt;code&gt;loops&lt;/code&gt; por códigos mais fáceis de escrever e mais expressivos.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;tibble&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;tibble&lt;/code&gt; é uma representação moderna do &lt;code&gt;dataframe&lt;/code&gt;. &lt;code&gt;Tibbles&lt;/code&gt; são dataframes preguiçosos e rudes: eles fazem menos e reclamam mais, forçando você a enfrentar os problemas mais cedo, normalmente levando a um código mais limpo e expressivo.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;stringr&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;stringr&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;stringr&lt;/code&gt; fornece um conjunto coeso de funções projetadas para tornar o trabalho com texto o mais fácil possível. Ele é construído sobre o &lt;code&gt;stringi&lt;/code&gt;, que usa a biblioteca &lt;code&gt;ICU C&lt;/code&gt; para fornecer implementações rápidas e corretas de manipulações comuns de texto&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;forcats&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;forcats&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;forcats&lt;/code&gt; fornece um conjunto de ferramentas úteis que resolvem problemas comuns com fatores. R utiliza fatores para lidar com variáveis categóricas, variáveis que têm um conjunto fixo e conhecido de valores possíveis.&lt;/p&gt;
&lt;p&gt;O &lt;code&gt;tidyverse&lt;/code&gt; também inclui muitos outros pacotes com uso mais especializado. Eles não são carregados automaticamente com &lt;code&gt;biblioteca(tidyverse)&lt;/code&gt;, então você precisará carregar cada um deles com sua própria chamada à biblioteca.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;importação-de-dados&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Importação de dados&lt;/h3&gt;
&lt;p&gt;Assim como o &lt;code&gt;readr&lt;/code&gt;, o pacote tidyverse instala uma série de outros pacotes para a leitura de dados:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/r-dbi/DBI&#34;&gt;&lt;code&gt;DBI&lt;/code&gt;&lt;/a&gt; para bancos de dados relacionais. Você precisará emparelhar &lt;code&gt;DBI&lt;/code&gt; com um backend específico de banco de dados como &lt;code&gt;RSQLite&lt;/code&gt; , &lt;code&gt;RMariaDB&lt;/code&gt;, &lt;code&gt;RPostgres&lt;/code&gt;, ou &lt;code&gt;odbc.&lt;/code&gt; Saiba mais em &lt;a href=&#34;https://db.rstudio.com&#34;&gt;https://db.rstudio.com&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://haven.tidyverse.org/&#34;&gt;&lt;code&gt;haven&lt;/code&gt;&lt;/a&gt; para dados SPSS, Stata, e SAS.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/r-lib/httr&#34;&gt;&lt;code&gt;httr&lt;/code&gt;&lt;/a&gt; para web APIs.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://readxl.tidyverse.org/&#34;&gt;&lt;code&gt;readxl&lt;/code&gt;&lt;/a&gt; para planilhas .xls e .xlsx.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tidyverse/rvest&#34;&gt;&lt;code&gt;rvest&lt;/code&gt;&lt;/a&gt; para raspagem da web.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jeroen/jsonlite#jsonlite&#34;&gt;&lt;code&gt;jsonlite&lt;/code&gt;&lt;/a&gt; para JSON. (mantido por Jeroen Ooms.)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/r-lib/xml2&#34;&gt;&lt;code&gt;xml2&lt;/code&gt;&lt;/a&gt; para XML.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;wrangle&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Wrangle&lt;/h3&gt;
&lt;p&gt;Além de &lt;code&gt;tidyr&lt;/code&gt; e &lt;code&gt;dplyr&lt;/code&gt;, há cinco pacotes (incluindo &lt;code&gt;stringr&lt;/code&gt; e &lt;code&gt;forcats&lt;/code&gt;) que são projetados para trabalhar com tipos específicos de dados:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lubridate.tidyverse.org/&#34;&gt;&lt;code&gt;lubridate&lt;/code&gt;&lt;/a&gt; para datas e datas-horas.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tidyverse/hms&#34;&gt;&lt;code&gt;hms&lt;/code&gt;&lt;/a&gt; para valores de data e hora do dia.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tidyverse/blob&#34;&gt;&lt;code&gt;blob&lt;/code&gt;&lt;/a&gt; para armazenamento de dados blob (binários).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;programa&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Programa&lt;/h3&gt;
&lt;p&gt;Além do &lt;code&gt;purrr&lt;/code&gt;, que fornece métodos muito consistentes e naturais para iteração em objetos R, há dois pacotes adicionais que ajudam nos desafios gerais de programação:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://magrittr.tidyverse.org/&#34;&gt;&lt;code&gt;magrittr&lt;/code&gt;&lt;/a&gt; fornece o &lt;code&gt;pipe&lt;/code&gt;, &lt;code&gt;%&amp;gt;%&lt;/code&gt;. Ele também fornece um número de operadores de pipe mais especializados (como &lt;code&gt;%$%&lt;/code&gt; e &lt;code&gt;%&amp;lt;&amp;gt;%&lt;/code&gt;) que podem ser úteis em outras aplicações.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/tidyverse/glue&#34;&gt;&lt;code&gt;glue&lt;/code&gt;&lt;/a&gt; fornece uma alternativa à &lt;code&gt;paste()&lt;/code&gt; que facilita a combinação de dados e texto.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;modelo&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Modelo&lt;/h3&gt;
&lt;p&gt;A modelagem com o &lt;code&gt;tidyverse&lt;/code&gt; possibilita a coleção de pacotes de &lt;code&gt;tidymodels&lt;/code&gt;, que em grande parte substituem o pacote &lt;code&gt;modelr&lt;/code&gt; usado no &lt;code&gt;R4DS.&lt;/code&gt; Estes pacotes fornecem uma base abrangente para a criação e utilização de modelos de todos os tipos. Visite o &lt;a href=&#34;https://www.tidymodels.org/start/&#34;&gt;Guia de Introdução&lt;/a&gt; ou, para exemplos mais detalhados, vá direto para a página &lt;a href=&#34;https://www.tidymodels.org/learn/&#34;&gt;Aprender&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;alguns-links-interessantes-para-aprender-tidyverse&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Alguns links interessantes para aprender &lt;code&gt;tidyverse&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tidyverse.org/learn/&#34;&gt;Learn the tidyverse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rstudio-education/remaster-the-tidyverse/&#34;&gt;Remaster tidyverse by Garret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://programminghistorian.org/en/lessons/data_wrangling_and_management_in_R&#34;&gt;Data wrangling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bookdown.org/ndphillips/YaRrr/&#34;&gt;YaRrr! The Pirate’s Guide to R Nathaniel D. Phillips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tipos de dados, objetos e operadores no R</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/estrutura_dados/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/estrutura_dados/</guid>
      <description>
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tipos-de-dados-no-r&#34;&gt;Tipos de dados no R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tipos-de-classes-no-r&#34;&gt;Tipos de classes no R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dicas-de-sites-com-informação-interessante&#34;&gt;Dicas de sites com informação interessante&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;tipos-de-dados-no-r&#34; class=&#34;section level3 tabset tabset-fade tabset-pills&#34;&gt;
&lt;h3&gt;Tipos de dados no R&lt;/h3&gt;
&lt;p&gt;No R, os dados são organizados por meio de uma estrutura hierárquica de tipos de dados que podem ser utilizados para armazenar valores em diferentes estruturas. Cada tipo de dado pode ser associado com uma função de teste e uma função de conversão.&lt;/p&gt;
&lt;p&gt;A função de teste retorna sempre &lt;code&gt;TRUE&lt;/code&gt; ou &lt;code&gt;FALSE&lt;/code&gt;, pois é uma &lt;code&gt;função lógica&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A função de conversão, quando possível, transforma os dados em diferentes tipos.&lt;/p&gt;
&lt;p&gt;Funções de teste apresentam a estrutura &lt;code&gt;is.character()&lt;/code&gt; e funções de conversão são &lt;code&gt;as.character()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Neste curso não detalharemos todos os tipos de dados, mas apresentaremos apenas os mais importantes para a análise de dados em caráter exploratório. No blog, temos diversas sugestões de tutoriais e documentação geral que contempla todos os tipos de dados e capacidade de interoperabilidade do R.&lt;/p&gt;
&lt;div id=&#34;character&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Character&lt;/h4&gt;
&lt;p&gt;Variáveis &lt;code&gt;character&lt;/code&gt; são aquelas que contém texto. Para designar uma variável como texto, precisamos colocar seus valores entre aspas. Dados do tipo texto são comuns em variáveis categóricas.&lt;/p&gt;
&lt;p&gt;Experimente:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;d &amp;lt;- &amp;quot;texto&amp;quot;
is.character(d)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;numeric&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Numeric&lt;/h4&gt;
&lt;p&gt;Dados &lt;code&gt;numeric&lt;/code&gt; são números. A função &lt;code&gt;numeric&lt;/code&gt; pode ser utilizada para gerar um vetor com elementos numéricos com valor 0.&lt;/p&gt;
&lt;p&gt;Faça:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Criar vetor de cinco posições com valores 0
numeric(5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0 0 0 0 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Gera valor character
e &amp;lt;- &amp;quot;1980&amp;quot;

# Teste
is.numeric(e)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Conversão
f &amp;lt;- as.numeric(&amp;quot;1980&amp;quot;)

# Teste
is.numeric(f)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;logical&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Logical&lt;/h4&gt;
&lt;p&gt;A função &lt;code&gt;logical&lt;/code&gt; gera um vetor lógico com o tamanho desejado e por padrão, cada elemento do vetor recebe o valor &lt;code&gt;FALSE&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Um objeto de qualquer uma desses tipos é chamado de &lt;strong&gt;objeto atômico&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mãos à obra:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;logical(3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE FALSE FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Conversão
as.logical(c(7,5,0))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  TRUE  TRUE FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# TRUE e FALSE podem ser convertidos em 1 ou 0
as.logical(c(7,5,0))*1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1 1 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Os valores no vetor que são diferentes de &lt;em&gt;zero&lt;/em&gt;, recebem o valor &lt;code&gt;TRUE&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A função &lt;strong&gt;&lt;code&gt;c&lt;/code&gt;&lt;/strong&gt;(&lt;em&gt;combine&lt;/em&gt;) é utilizada para composição de um vetor, combinando valores identificados por índices.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tipos-de-classes-no-r&#34; class=&#34;section level3 tabset tabset-fade tabset-pills&#34;&gt;
&lt;h3&gt;Tipos de classes no R&lt;/h3&gt;
&lt;p&gt;Diferentes tipos de dados podem ser utilizados para popular diferentes estruturas de dados ou &lt;code&gt;classes&lt;/code&gt;. As classes mais comumente utilizadas para análise de dados espaciais são: vetores, matrizes, data frames, listas e factores.&lt;/p&gt;
&lt;p&gt;É por meio das classes que as funções e operadores conseguem saber exatamente o que fazer com um objeto.&lt;/p&gt;
&lt;p&gt;Experimente:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;1+1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Faça &lt;code&gt;&#34;a&#34; + &#34;b&#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;O operador &lt;code&gt;+&lt;/code&gt; verifica que “a” e “b” não são números (ou que não são do tipo &lt;code&gt;numeric&lt;/code&gt;) e devolve uma mensagem de erro informando isso.&lt;/p&gt;
&lt;div id=&#34;vetores&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Vetores&lt;/h4&gt;
&lt;p&gt;O R é construído com base no conceito de vetores e matrizes. As maior parte das operações é feita para os elementos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Definição de vetores
vector(mode = &amp;quot;numeric&amp;quot;, length = 8)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0 0 0 0 0 0 0 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector(length = 8)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tmp &amp;lt;- data.frame(a=10:15, b=15:20)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fatores&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Fatores&lt;/h4&gt;
&lt;p&gt;Fatores são vetores de categorias específicas, definidas por meio do parâmetro &lt;code&gt;levels&lt;/code&gt;. A ordem dos fatores pode ser especificada pela função &lt;code&gt;ordered&lt;/code&gt;. Experimente:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Vetor de texto
tipos.casas &amp;lt;- c(&amp;quot;casa&amp;quot;, &amp;quot;apartamento&amp;quot;, &amp;quot;apartamento&amp;quot;, &amp;quot;sobrado&amp;quot;)

# Vetor de fatores
tipos.casas &amp;lt;- factor(c(&amp;quot;casa&amp;quot;, &amp;quot;apartamento&amp;quot;, &amp;quot;apartamento&amp;quot;, &amp;quot;sobrado&amp;quot;), levels=c(&amp;quot;casa&amp;quot;, &amp;quot;apartamento&amp;quot;, &amp;quot;sobrado&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quando utilizamos dados em estrutura de fatores, é possível gerar sínteses rápidas e simples por meio da função &lt;code&gt;table&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(tipos.casas)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tipos.casas
##        casa apartamento     sobrado 
##           1           2           1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dados fatoriais são úteis para o tratamento de dados categóricos, ou que pertencem a um determinado número de classes predeterminadas. Existem muitas feições representadas por meio de dados espaciais que são estruturadas em variáveis discretas.&lt;/p&gt;
&lt;p&gt;LEMBRANDO….. Dados podem ser:
&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/continuous_discrete.png&#34; alt=&#34;Discretos x Contínuos&#34; /&gt;
&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/nominal_ordinal_binary.png&#34; alt=&#34;Discreto x Contínuo&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Para ordenar dados fatoriais, utilizamos a função &lt;code&gt;ordered&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;renda_1 &amp;lt;- factor(c(&amp;quot;alta&amp;quot;, &amp;quot;alta&amp;quot;, &amp;quot;baixa&amp;quot;, &amp;quot;baixa&amp;quot;, &amp;quot;media&amp;quot;, &amp;quot;alta&amp;quot;), levels=c(&amp;quot;baixa&amp;quot;, &amp;quot;media&amp;quot;, &amp;quot;alta&amp;quot;)) 

renda_2 &amp;lt;- ordered(c(&amp;quot;alta&amp;quot;, &amp;quot;alta&amp;quot;, &amp;quot;baixa&amp;quot;, &amp;quot;baixa&amp;quot;, &amp;quot;media&amp;quot;, &amp;quot;alta&amp;quot;), levels=c(&amp;quot;baixa&amp;quot;, &amp;quot;media&amp;quot;, &amp;quot;alta&amp;quot;)) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;listas&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Listas&lt;/h4&gt;
&lt;p&gt;Os tipos de dados &lt;code&gt;character&lt;/code&gt;, &lt;code&gt;numeric&lt;/code&gt; e &lt;code&gt;logical&lt;/code&gt; só podem ser associados a classes de dados nas quais TODOS os elementos são do mesmo tipo. A classe &lt;code&gt;listas&lt;/code&gt; não tem esse requisito. As listas têm posições (índices) para diferentes topos de elementos.&lt;/p&gt;
&lt;p&gt;Para acessar um elemento em um vetor, utilizamos &lt;code&gt;[]&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_teste &amp;lt;- c(5:10)
vector_teste&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  5  6  7  8  9 10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_teste[4]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para acessar um elemento em uma lista por meio de sua posição, utilizamos &lt;code&gt;[[]]&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colaborador &amp;lt;- list(name=&amp;quot;Renata Oliveira&amp;quot;, ano.inicio = 2006, posicao = &amp;quot;Professora&amp;quot;)
colaborador&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $name
## [1] &amp;quot;Renata Oliveira&amp;quot;
## 
## $ano.inicio
## [1] 2006
## 
## $posicao
## [1] &amp;quot;Professora&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;matrizes-data.frames-e-tibble&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Matrizes, data.frames e tibble&lt;/h4&gt;
&lt;p&gt;Matrizes são um conjunto de vetores. As linhas e colunas das matrizes podem ser nomeadas. Na análise espacial de um dado vetorial, temos uma tabela de atributos em estrutura matricial. As linhas representam as feições e as colunas são os atributos dessas feições. Na representação de dados raster, linhas e colunas representam latitudes e longitudes ou células raster.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Data frames&lt;/code&gt; e &lt;code&gt;tibble&lt;/code&gt; são estruturas tabulares de dados que, diferentemente das matrizes (&lt;code&gt;matrix&lt;/code&gt;), permitem representar diferentes atributos (e tipos de dados) em diferentes colunas. Esses tipos de classes são utilizadas para organizar dados espaciais (pontos, linhas, áreas e pixels).&lt;/p&gt;
&lt;p&gt;Em tabelas de dados espaciais, cada informação representa um fenômeno real por meio de uma feição geográfica e os campos representam atributos associados com cada feição (população, área, altitude etc.).&lt;/p&gt;
&lt;p&gt;A classe &lt;code&gt;data.frame&lt;/code&gt; no R é composta por uma série de vetores de &lt;strong&gt;comprimento igual&lt;/strong&gt; (número de observações) que juntos formam uma estrutura de dados bi-dimensional. Cada vetor registra valores de um atributo específico. Essa é a classe de dados mais comumente utilizada para armazenar dados no R.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(dist=seq(0, 400, 100), city=c(&amp;quot;Belo Horizonte&amp;quot;, &amp;quot;São Paulo&amp;quot;, &amp;quot;Rio de Janeiro&amp;quot;, &amp;quot;Brasília&amp;quot;, &amp;quot;Salvador&amp;quot;))
str(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    5 obs. of  2 variables:
##  $ dist: num  0 100 200 300 400
##  $ city: chr  &amp;quot;Belo Horizonte&amp;quot; &amp;quot;São Paulo&amp;quot; &amp;quot;Rio de Janeiro&amp;quot; &amp;quot;Brasília&amp;quot; ...&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;A função &lt;code&gt;seq&lt;/code&gt; possibilita a criação de uma sequência de dados por meio de três parâmetros: seq(&lt;code&gt;valor_inicial&lt;/code&gt;, &lt;code&gt;valor_final&lt;/code&gt;, &lt;code&gt;intervalo&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tibbles e data.frames não são muito diferentes. Há alguns detalhes quanto à transformação de dados na criação dessas classes, mas, em linhas gerais, a estrutura de dados em &lt;code&gt;tibble&lt;/code&gt; é mais eficiente e organizada.&lt;/p&gt;
&lt;p&gt;As seguintes funções são adequadas tanto para &lt;code&gt;data.frames&lt;/code&gt; como para &lt;code&gt;tibble&lt;/code&gt;:&lt;br /&gt;
&lt;code&gt;names()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;colnames()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;rownames()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;length()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;ncol()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;nrow()&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Explore a documentação do &lt;code&gt;tibble&lt;/code&gt; em: &lt;code&gt;vignette(&#34;tibble&#34;)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Os objetos dessas duas classes podem ser selecionados por meio da estrutura &lt;code&gt;data.frame[linha, coluna]&lt;/code&gt;, na qual os parâmetros linhas e coluna são os índices desses elementos.&lt;/p&gt;
&lt;p&gt;Para combinar &lt;code&gt;data.frame&lt;/code&gt; e &lt;code&gt;tibble&lt;/code&gt; por linhas ou colunas utilizamos, respectivamente, as funções &lt;code&gt;rbind()&lt;/code&gt; e &lt;code&gt;cbind()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Até aqui, já ficou claro que a escolha ou identificação dos tipos e das classes de dados espaciais e não espaciais é muito importante para sua análise.&lt;/p&gt;
&lt;p&gt;Algumas funções para manipulação de dataframes:&lt;/p&gt;
&lt;p&gt;head() # - Mostra as primeiras 6 linhas.&lt;br /&gt;
tail() # - Mostra as últimas 6 linhas.&lt;br /&gt;
dim() # - Número de linhas e de colunas.&lt;br /&gt;
names() # - Os nomes das colunas (variáveis).&lt;br /&gt;
str() # - Estrutura do data.frame. Mostra, entre outras coisas, as classes de cada coluna.&lt;br /&gt;
cbind() # - Acopla duas tabelas lado a lado.&lt;br /&gt;
rbind() # - Empilha duas tabelas.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;dicas-de-sites-com-informação-interessante&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Dicas de sites com informação interessante&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://lhmet.github.io/adar-ebook/vetor.html&#34; class=&#34;uri&#34;&gt;https://lhmet.github.io/adar-ebook/vetor.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://leg.ufpr.br/~fernandomayer/aulas/ce083-2016-2/02_funcoes_e_objetos.html&#34; class=&#34;uri&#34;&gt;http://leg.ufpr.br/~fernandomayer/aulas/ce083-2016-2/02_funcoes_e_objetos.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.estatisticacomr.uff.br/?p=564&#34; class=&#34;uri&#34;&gt;http://www.estatisticacomr.uff.br/?p=564&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://livro.curso-r.com/3-r-base.html&#34; class=&#34;uri&#34;&gt;https://livro.curso-r.com/3-r-base.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.msperlin.com/padfeR/operacoes-basicas.html&#34; class=&#34;uri&#34;&gt;https://www.msperlin.com/padfeR/operacoes-basicas.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Visualização de dados</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/ggplot/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/ggplot/</guid>
      <description>
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#gráficos-no-r&#34;&gt;Gráficos no R&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ferramentas-básicas-de-construção-de-gráficos-no-r&#34;&gt;Ferramentas básicas de construção de gráficos no R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#introdução-à-gramática-de-gráficos-com-ggplot2&#34;&gt;Introdução à gramática de gráficos com ggplot2&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot2-uma-gramática-de-dados&#34;&gt;ggplot2: uma gramática de dados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#um-primeiro-exemplo&#34;&gt;Um primeiro exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variações-de-histograma-e-gráfico-de-densidade&#34;&gt;Variações de histograma e gráfico de densidade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#curva-de-densidade-ou-boxplot&#34;&gt;Curva de densidade ou boxplot?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#duas-variáveis-contínuas-e-gráfico-de-dispersão&#34;&gt;Duas variáveis contínuas e gráfico de dispersão&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#aspectos-não-relacionados-à-geometria&#34;&gt;Aspectos não relacionados à geometria&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;gráficos-no-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Gráficos no R&lt;/h2&gt;
&lt;div id=&#34;ferramentas-básicas-de-construção-de-gráficos-no-r&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Ferramentas básicas de construção de gráficos no R&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x1 &amp;lt;- rnorm(100)
y1 &amp;lt;- rnorm(100)
plot(x1,y1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(x1,y1,pch=16, col=&amp;#39;red&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x2 &amp;lt;- seq(0,2*pi,len=100)
y2 &amp;lt;- sin(x2)

plot(x2,y2,type=&amp;#39;l&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(x2,y2,type=&amp;#39;l&amp;#39;, lwd=3, col=&amp;#39;darkgreen&amp;#39;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(x2,y2,type=&amp;#39;l&amp;#39;, col=&amp;#39;darkgreen&amp;#39;, lwd=3, ylim=c(-1.2,1.2));
y2r &amp;lt;- y2 + rnorm(100,0,0.1)
points(x2,y2r, pch=16, col=&amp;#39;darkred&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-3-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;carregando-mapas-no-r&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Carregando mapas no R&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;quot;GISTools&amp;quot;, depend = T)
library(GISTools)

# library(GISTools)
data(georgia)

# seleciona o primeiro elemento - Município Appling
appling &amp;lt;- georgia.polys[[1]]

# determinar a extensão da representação
plot(appling, asp=1, type=&amp;#39;n&amp;#39;, xlab=&amp;quot;Easting&amp;quot;, ylab=&amp;quot;Northing&amp;quot;)

# plot the selected features with hatching
polygon(appling, density=14, angle=135) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;introdução-à-gramática-de-gráficos-com-ggplot2&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introdução à gramática de gráficos com ggplot2&lt;/h1&gt;
&lt;p&gt;Para este tutorial vamos usar novamente dados de Fakeland, como fizemos no tutorial 5. Em vez de apenas 30 observações, agora trabalharemos com um conjunto maior de cidadãos (200) e menos variáveis, para facilitar nosso trabalho.&lt;/p&gt;
&lt;p&gt;Antes de abrir os dados, vamos começar carregando as duas bibliotecas que utilizaremos no tutorial: &lt;em&gt;readr&lt;/em&gt;, para ler os dados; e &lt;em&gt;ggplot2&lt;/em&gt;, para a produção de gráficos. Você pode simplesmente carregar o pacte &lt;em&gt;tidyverse&lt;/em&gt; se preferir.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readr)
library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✓ tibble  3.1.1     ✓ dplyr   1.0.6
## ✓ tidyr   1.1.3     ✓ stringr 1.4.0
## ✓ purrr   0.3.4     ✓ forcats 0.5.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()
## x dplyr::select() masks MASS::select()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A seguir, carregue os dados, que estão no repositório da oficina:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;url_fake_data &amp;lt;- &amp;quot;https://raw.githubusercontent.com/leobarone/cebrap_lab_programacao_r/master/data/fake_data_2.csv&amp;quot;
fake &amp;lt;- read_delim(url_fake_data, delim = &amp;quot;;&amp;quot;, col_names = T)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## ── Column specification ────────────────────────────────────────────────────────
## cols(
##   idade = col_double(),
##   sexo = col_character(),
##   educ = col_character(),
##   partido = col_character(),
##   candidato = col_character(),
##   renda = col_double(),
##   filhos = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;ggplot2-uma-gramática-de-dados&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;ggplot2: uma gramática de dados&lt;/h2&gt;
&lt;p&gt;Em conjunto com a gramática de manipulação de dados do &lt;em&gt;dplyr&lt;/em&gt;, a gramática de gráficos &lt;em&gt;ggplot2&lt;/em&gt; é um dos destaques da linguagem R. Além de flexível e aplicável a diversas classes de objetos (data frames, objetos de mapa e redes, por exemplo), a qualidade dos gráficos é excepcionalmente boa.&lt;/p&gt;
&lt;p&gt;Não é, no entanto, tão intuitiva e simples como a gramática de manipulação de dados. Assim, neste breve tutorial vamos priorizar a compreensão da estrutura do código para produzir gráficos com &lt;em&gt;ggplot2&lt;/em&gt; a partir de alguns exemplos simples e propositalmente não cobriremos todas as (inúmeras) possibilidades de visualização.&lt;/p&gt;
&lt;p&gt;Você verá, depois de um punhado de gráficos, que a estrutura pouco muda de um tipo de gráfico a outro. Quando precisar de um “tipo” novo de gráfico, ou, como denominaremos a partir de agora, de uma nova “geometria”, bastará aprender mais uma linha de código a ser adicionada ao final de um código já conhecido.&lt;/p&gt;
&lt;p&gt;Vamos logo a um primeiro exemplo para clarificar o assunto.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;um-primeiro-exemplo&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Um primeiro exemplo&lt;/h2&gt;
&lt;p&gt;Queremos conhecer a distribuição de preferências de candidato à presidência na amostra de cidadãos de Fakeland. Veja como apresentar essa informação com o pacote &lt;em&gt;ggplot2&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = fake, aes(x = candidato)) +
  geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Bastante estranho, não? Vamos olhar cada uma de suas partes.&lt;/p&gt;
&lt;p&gt;Comecemos pela primeira linha. A principal função do código é, como era de se esperar, &lt;em&gt;ggplot&lt;/em&gt; (sem o 2 mesmo). Note que não estamos fazendo uma atribuição, por enquanto, pois queremos apenas “imprimir” o gráfico, e não guardá-lo como objeto (algo perfeitamente possível!).&lt;/p&gt;
&lt;p&gt;O primeiro argumento da função &lt;em&gt;ggplot&lt;/em&gt; é “data”, ou seja, o objeto que contém os dados a serem visualizados. No nosso caso, o data frame &lt;em&gt;fake&lt;/em&gt;. Diremos que um código de gráfico se compõem de várias camadas, e a primeira delas corresponde aos dados.&lt;/p&gt;
&lt;p&gt;Até aqui, nada de novo. A estranhesa vem com as 3 letrinhas “aes” que são a abreviação de “aesthetics”. Está é a segunda “camada”. Aqui definiremos quais variáveis farão parte do gráfico. Estamos trabalhando por enquanto com apenas uma variável, representada no eixo horizontal, ou eixo “x”. Por esta razão preenchemos o parâmetro “x” da “aesthetics” e nada mais.&lt;/p&gt;
&lt;p&gt;Mesmo após usar a função &lt;em&gt;ggplot&lt;/em&gt;, informar a fonte dos dados e a “aesthetics”, não dissemos nada sobre a geometria do gráfico. A geometria será nossa terceira camada. Como estamos lidando com uma variável nominal (discreta), e queremos observar sua distribuição de probabilidade, podemos usar uma gráfico de barras simples.&lt;/p&gt;
&lt;p&gt;Para adicionar uma geometria, colocamos um símbolo de “+” após fechar o parêntesis da função &lt;em&gt;ggplot&lt;/em&gt; e, na mesma linha, ou, convencionalmente, na linha seguinte, utilizarmos a função da geometria correspondente. Vamos repetir o gráfico para examinar o código novamente, agora prestando atenção às suas partes:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = fake, aes(x = candidato)) +
  geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Vamos trocar rapidamente para uma variável contínua, idade, (alterando o valor de “x” dentro de “aesthetics”) e a geometria para histograma (adequado para representar variávels numéricas):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = fake, aes(x = idade)) + 
  geom_histogram()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Não avance. Compare os dois códigos com calma e compreenda as diferenças. Note que o tipo de variável que demanda uma(s) geometria(s) específica(s), e não contrário. Pergunte, caso tenha dúvidas.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;variações-de-histograma-e-gráfico-de-densidade&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Variações de histograma e gráfico de densidade&lt;/h2&gt;
&lt;p&gt;As geometrias, cada uma com sua função, também têm parâmetros que podem ser alterados. Por exemplo, as barras do histograma que acabamos de produzir são muito “fininhas”. Vamos aumentar sua largura, ou seja, vamos representar mais valores do eixo “x” em cada barra do histograma:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = fake, aes(x = idade)) + 
  geom_histogram(binwidth = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;O gráfico está muito cinza. Vamos mudar algumas cores:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = fake, aes(x = idade)) + 
  geom_histogram(binwidth = 2, colour = &amp;quot;darkred&amp;quot;, fill = &amp;quot;green&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Melhor, não? Certamente não. Mas note que podemo trocar a contornos dos contornos das barras e seu preenchimento. Em geral, os argumentos “colour” e “fill” servem a várias geometrias (e, como veremos abaixo, podemos usá-los também em “aesthetics”).&lt;/p&gt;
&lt;p&gt;Curiosidade: R aceita as duas grafias em inglês para a palavra cor, “colour” (britânico) e “color” (americano).&lt;/p&gt;
&lt;p&gt;Histogramas são normalmente bastante adequados par variáveis numéricas com valores bastante espaçados, como é o caso de variáveis discretas numéricas (valores inteiros apenas, não podendo assumir valores doidos como pi ou raiz de 2).&lt;/p&gt;
&lt;p&gt;Uma alternativa mais elegante ao histograma, e convencionalmente utilizada para variáveis verdadeiramente contínuas, são os gráficos de densidade. Vamos, assim, apenas alterar a geometria para a mesma variável, idade, e observar novamente sua distribuição.&lt;/p&gt;
&lt;p&gt;Nota: a partir de agora vamos omitir o nome do parâmetro “data” logo no início do código.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade)) + 
  geom_density()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Lindo, mas ainda cinza demais. Vamos adicionar cor à borda:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade)) + 
  geom_density(colour = &amp;quot;blue&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Melhor (melhor?), mas ainda muito branco. Vamos adicionar cor ao interior da curva:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade)) + 
  geom_density(colour = &amp;quot;blue&amp;quot;, fill = &amp;quot;blue&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Muito pior. E se deixássemos a curva mais “transparente”?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade)) + 
  geom_density(colour = &amp;quot;blue&amp;quot;, fill = &amp;quot;blue&amp;quot;, alpha = 0.2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Agora sim melhorou. Mas nos falta uma referência para facilitar a leitura do gráfico. Por exemplo, seria legal adicionar uma linha vertical que indicasse onde está a média da distribuição. Vamos calcular a média da idade:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;media_idade &amp;lt;- mean(fake$idade)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mas estamos tratando de curvas de densidade, não estamos? Nessa geometria não há possibilidade de representar valores com uma linha vertical. Vamos, então, adicionar uma nova geometria, com uma “aesthetics” própria, com novos dados (no caso, um valor único), ao gráfico que já havíamos construído:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade)) + 
  geom_density(colour = &amp;quot;blue&amp;quot;, fill = &amp;quot;blue&amp;quot;, alpha = 0.2) +
  geom_vline(aes(xintercept = media_idade))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Veja que, com &lt;em&gt;ggplot2&lt;/em&gt; podemos adicionar novas geometrias e dados sempre que precisarmos. É por esta razão que a estrutura do código deste pacote difere tanto da estrutura para gráficos no pacote base. A flexibilidade adicionar geometrias (usando ou não os dados inicialmente apontados) é uma das vantagens do &lt;em&gt;ggplot2&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Para tornar o gráfico mais interessante, vamos alterar a forma e a cor da linha adicionada no gráfico anterior:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade)) + 
  geom_density(colour = &amp;quot;blue&amp;quot;, fill = &amp;quot;blue&amp;quot;, alpha = 0.2) +
  geom_vline(aes(xintercept = media_idade),
             linetype=&amp;quot;dashed&amp;quot;,
             colour=&amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;“linetype” é outro parâmetro comum a diversas geometrias (obviamente, as geometrias de linhas).&lt;/p&gt;
&lt;p&gt;Vamos dar alguns passos para traz e retornar aos histogramas. E se quisermos comparar as distribuições de idade por sexo, por exemplo? Precisamos filtrar os dados e fazer um gráfico para cada categoria de sexo?&lt;/p&gt;
&lt;p&gt;Poderíamos. Mas mais interessante é compara as distribuições em um mesmo gráfico. Como estamos separando uma distribuição de uma variável contínua (idade) em duas, a partir de uma segunda variável (sexo), precisamos adicionar essa nova variável à “aesthetics”. Veja como:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, fill = sexo)) + 
  geom_histogram(binwidth = 2, position = &amp;quot;identity&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Observe que adicionamos o parâmetro “fill” à “aesthetics”. Isso significa que a variável sexo separará as distribuições de idade em cores de preenchimento diferentes. Conseguem ver as duas distribuições, uma atrás da outra? Note que agora temos uma legenda.&lt;/p&gt;
&lt;p&gt;“position” é o que determina como as barras ficarão dispotas uma em relação à outra. Vamos ver outras opções para o mesmo parâmetro (novamente, comum a várias geometrias) para buscar uma opção mais adequada de visualizar os mesmos dados:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x=idade, fill = sexo)) + 
  geom_histogram(binwidth = 2, position = &amp;quot;dodge&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Um pouco melhor?&lt;/p&gt;
&lt;p&gt;Vamos tentar algo semelhante com as curvas de densidade. Em vez de “fill”, vamos usar a variável sexo em “colour” na “aesthetics” e separa as distribuições por cores de borda:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, colour = sexo)) + 
  geom_density()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Agora sim está melhor. Vamos adicionar tentar o mesmo com “fill”:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, fill = sexo)) + 
  geom_density()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Não ficou muito bom. Mas pode melhorar. Com o parâmetro “alpha”, que já usamos no passado, podemos deixar as distribuições mais “transparentes” e observar as áreas nas quais se sobrepôe:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, fill = sexo)) + 
  geom_density(alpha = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Finalmente, podemos usar “fill” e “colour” juntos na “aesthetics”&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, fill = sexo, colour = sexo)) + 
  geom_density(alpha = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Que belezura de gráfico! A comparação de distribuições de uma variável dependente por uma variável binária (duas categorias) é uma das mais úteis em ciência, pois é exatamente a forma gráfica de testes de hipóteses. Qual grupo tem, na média, mais idade em Fakeland? Com os gráficos fica fácil responder&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;curva-de-densidade-ou-boxplot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Curva de densidade ou boxplot?&lt;/h2&gt;
&lt;p&gt;Vamos repetir o gráfico acima, mas, em vez de separar as distribuições por sexo, vamos separar por uma variável com mais categorias: ‘educ’, que representa nível educacional mais alto obtido pelo indivíduo em Fakeland.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, fill = educ, colour = educ)) + 
  geom_density(alpha = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Dá par comparar as distribuições de idade por grupo? Certamente não. Podemos ter alguma ideia de que não há muita diferença, mas o gráfico é poluído demais.&lt;/p&gt;
&lt;p&gt;Uma alternativa mais sintética, ou seja, que contém menos informações,
para representar distribuições de variáveis numéricas é utilizar boxplot. Vamos ver um exemplo que serve de alternativa ao gráfico anterior.&lt;/p&gt;
&lt;p&gt;Nota: na nova “aesthetics” temos agora “x” (eixo horizontal) e “y”, eixo vertical.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = educ, y = idade)) + 
  geom_boxplot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Importante: se você não tem familiaridade com boxplots, me peça uma rápida explicação.&lt;/p&gt;
&lt;p&gt;Ainda que com perda de informação, conseguimos compara as distribuições de idade por nível educacional de forma bastante rápida. As médias são próximas e as distribuições mais à esqueda são ligeiramente mais concentradas em torno da média do que as distribuições mais à direita.&lt;/p&gt;
&lt;p&gt;Para colocar um pouco de cor nos boxplots, podemos usar “fill” novamente:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = educ, y = idade, fill = educ)) + 
  geom_boxplot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-28-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Gráfico de barras, para variáveis categóricas, e histogramas, curvas de densidade e boxplot são os melhores gráficos para explorarmos as distribuição de variáveis quando queremos conhecer os dados que recém coletamos ou obtemos.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;duas-variáveis-contínuas-e-gráfico-de-dispersão&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Duas variáveis contínuas e gráfico de dispersão&lt;/h2&gt;
&lt;p&gt;Até agora trabalhamos com distribuições de uma única variável ou com a distribuição conjunta de uma variável contínua por outra discreta (em outras palavras, separados a distribuição de uma variável em várias a partir de um variável categórica).&lt;/p&gt;
&lt;p&gt;Vamos ver agora como relacionar graficamente duas variáveis contínuas. O padrão é usarmos a geometria de gráfico de dispersão, que presenta cada par de informações como uma coordenada no espaço bidimensional. Vamos ver um exemplo com idade (eixo horizontal) e renda (eixo vertical):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda)) + 
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-29-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Você consegue ler este gráfico? Cada ponto representa um indivíduo, ou seja, posiciona no espaço o par (idade, renda) daquela(e) indivíduo.&lt;/p&gt;
&lt;p&gt;Note que há uma certa tendência nos dados: quanto mais velha a pessoa, maior sua renda. Podemos representar essa relação com modelos lineares e não lineares. A geometria &lt;em&gt;geom_smooth&lt;/em&gt; cumpre esse papel.&lt;/p&gt;
&lt;p&gt;Para utilizá-la, precisamos definir qual é o método (parâmetro “method”) de ajuste aos dados. O mais convencional é representar a relação entre as variáveis como reta. Veja o exemplo (ignore o parâmetro “se” por enquanto):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;, se = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-30-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Legal, não? Se retirarmos o parâmetro “se”, ou voltarmos seu valor para o padrão “TRUE”, obteremos também o intervalo de confiança da reta que inserimos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-31-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Modelos de regressão, linear ou não, estão bastante fora do escopo deste curso. Mas podemos falar sobre isso individualmente se você quiser. Tente apenas interpretar o resultado gráfico.&lt;/p&gt;
&lt;p&gt;A alternativa não linear para representar a relação ao dados mais utilizada com essa geometria é o método “loess”. Veja o resultado:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;loess&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-32-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;E se quisermos inserir informações de outras variáveis no gráfico? É possível?&lt;/p&gt;
&lt;p&gt;Sim, é. Se, por exemplo, queremos representar uma terceira variável numérica, podemos colocá-la como o tamanho dos pontos (raio do círculo). Por exemplo, o número de filhos, variável que vai de 1 a 10 nos nossos dados, poderia ser adicionada da seguinte forma:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda, size = filhos)) + 
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-33-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Se, em vez de alterar o tamanho dos pontos por uma variável numérica, quisermos alterar sua cor ou forma dos pontos com base em uma variável categória (sexo, por exemplo), fazemos, respectivamente:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda, colour = sexo)) + 
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-34-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ou:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda, shape = sexo)) + 
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-35-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Nota: cada símbolo é representado por um número e você encontra facilmente na documentação a tabela de códigos dos diferentes símbolos.&lt;/p&gt;
&lt;p&gt;Alterando simultaneamente cor e forma:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda, colour = sexo, shape = sexo)) + 
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-36-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Adicionando uma reta de regressão para cada categoria de sexo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda, colour = sexo)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;, se = F)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-37-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Lindo, não?&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;aspectos-não-relacionados-à-geometria&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Aspectos não relacionados à geometria&lt;/h2&gt;
&lt;p&gt;Finalmente, podemos alterar diversos aspectos não relacionados aos dados, geometria e “aesthetics”. O procedimento para adicionar alterações em título, eixos, legenda, etc, é o mesmo que para adicionar novas geometrias. Vamos trabalhar com o último gráfico que produzimos fazendo pequenas modificações.&lt;/p&gt;
&lt;p&gt;Em primeiro lugar, vamos adicionar um título ao gráfico:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda, colour = sexo)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) + 
  ggtitle(&amp;quot;Renda por idade, separado por sexo&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-38-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A seguir, vamos modificar os nomes dos rótulos dos eixos:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda, colour = sexo)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) + 
  ggtitle(&amp;quot;Renda por idade, separado por sexo&amp;quot;) +
  xlab(&amp;quot;Idade (em anos inteiros)&amp;quot;) +
  ylab(&amp;quot;FM$ (Fake Money)&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-39-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Também podemos modificar as legendas. Há um conjunto de comandos “scale”, que variam de acordo com o elemento da “aesthetics” que definem a legenda e com o tipo de variável, que podem ser usadas para tanto. No nosso caso, usamos uma variável discreta (sexo) como “colour”, e, por tanto, precisamos usar a função &lt;em&gt;scale_colour_discrete&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda, colour = sexo)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) + 
  ggtitle(&amp;quot;Renda por idade, separado por sexo&amp;quot;) +
  xlab(&amp;quot;Idade (em anos inteiros)&amp;quot;) +
  ylab(&amp;quot;FM$ (Fake Money)&amp;quot;) +
  scale_colour_discrete(name=&amp;quot;Sexo&amp;quot;,
                         breaks=c(&amp;quot;Female&amp;quot;, &amp;quot;Male&amp;quot;),
                         labels=c(&amp;quot;Mulher&amp;quot;, &amp;quot;Homem&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-40-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Excelente!&lt;/p&gt;
&lt;p&gt;Vamos complicar um pouco mais. Vamos supor que queremos separar agora nossos dados em múltiplos gráficos diferentes, um para cada nível de educação. Como fazer isso? Com &lt;em&gt;face_grid&lt;/em&gt; ou &lt;em&gt;facet_wrap&lt;/em&gt;. Veja um exemplo com o último:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(fake, aes(x = idade, y = renda, colour = sexo)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) + 
  ggtitle(&amp;quot;Renda por idade, separado por sexo&amp;quot;) +
  xlab(&amp;quot;Idade (em anos inteiros)&amp;quot;) +
  ylab(&amp;quot;FM$ (Fake Money)&amp;quot;) +
  scale_colour_discrete(name = &amp;quot;Sexo&amp;quot;,
                         breaks = c(&amp;quot;Female&amp;quot;, &amp;quot;Male&amp;quot;),
                         labels = c(&amp;quot;Mulher&amp;quot;, &amp;quot;Homem&amp;quot;)) + 
  facet_wrap( ~ educ, ncol = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/ggplot_files/figure-html/unnamed-chunk-41-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ufa! Quanta coisa em um só gráfico!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Documentos parametrizados</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/reprodutibility/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0100</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/reprodutibility/</guid>
      <description>&lt;p&gt;Um dos muitos benefícios de trabalhar com R Markdown é que você pode reproduzir análises com o clique de um botão. Isto torna muito fácil atualizar qualquer trabalho e alterar qualquer parâmetro de entrada dentro do relatório. Relatórios parametrizados estendem esse benefício e permitem aos usuários especificar um ou mais parâmetros para personalizar a análise. Isto é útil se você quiser criar um modelo de relatório que possa ser reutilizado em vários cenários similares. Como exemplos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Mostrar resultados para uma localização geográfica específica.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Executar um relatório que cubra um período de tempo específico.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Executar uma única análise várias vezes para diferentes suposições.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;declaração-de-parâmetros&#34;&gt;Declaração de parâmetros&lt;/h1&gt;
&lt;p&gt;Os parâmetros são especificados usando o campo dos parâmetros dentro da seção &lt;code&gt;YAML&lt;/code&gt;. Podemos especificar um ou mais parâmetros com cada item em uma nova linha. A título de exemplo:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-{r}&#34; data-lang=&#34;{r}&#34;&gt;---
title: My Document
output: html_document
params:
  year: 2018
  region: Europe
  printcode: TRUE
  data: file.csv
---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Todos os tipos de dados do &lt;code&gt;R&lt;/code&gt; podem ser processados por &lt;code&gt;yaml::yaml.load()&lt;/code&gt;, podendo ser incluídos como parâmetros, a saber: &lt;code&gt;character&lt;/code&gt;, &lt;code&gt;numeric&lt;/code&gt;, &lt;code&gt;integer&lt;/code&gt; e &lt;code&gt;logical&lt;/code&gt;. Também podemos usar objetos R incluindo &lt;code&gt;!r&lt;/code&gt; antes das expressões &lt;code&gt;R&lt;/code&gt;. Por exemplo, podemos incluir a data atual com o seguinte código R:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-{r}&#34; data-lang=&#34;{r}&#34;&gt;---
title: My Document
output: html_document
params:
  date: !r Sys.Date()
---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Qualquer expressão no &lt;code&gt;R&lt;/code&gt; incluída dentro dos parâmetros no &lt;code&gt;yaml&lt;/code&gt; é executada antes de qualquer código no documento, portanto qualquer dependência de pacote deve ser explicitamente declarada usando o &lt;code&gt;pacote::função&lt;/code&gt; notação (por exemplo, &lt;code&gt;!r lubridate::today()&lt;/code&gt;), mesmo que o pacote seja carregado mais tarde no documento &lt;code&gt;Rmd&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;knitting-com-parâmetros&#34;&gt;&lt;code&gt;Knitting&lt;/code&gt; com parâmetros&lt;/h2&gt;
&lt;p&gt;Há três maneiras de se fazer um relatório parametrizado:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Usando o botão &lt;code&gt;Knit&lt;/code&gt; dentro do RStudio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rmarkdown::render()&lt;/code&gt; com o argumento dos &lt;code&gt;params&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usando uma interface de usuário interativa para inserir valores de parâmetros.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;o-botão-knit&#34;&gt;O botão &lt;code&gt;Knit&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Usando o botão &lt;code&gt;Knit&lt;/code&gt; no RStudio ou a função &lt;code&gt;rmarkdown::render()&lt;/code&gt;, os valores-padrão listados nos metadados do &lt;code&gt;YAML&lt;/code&gt; (quando especificados) serão utilizados.&lt;/p&gt;
&lt;h3 id=&#34;knitting-com-parâmetros-personalizados&#34;&gt;&lt;code&gt;Knitting&lt;/code&gt; com parâmetros personalizados&lt;/h3&gt;
&lt;p&gt;Mesmo que seu documento tenha o campo de parâmetros nos metadados do &lt;code&gt;YAML&lt;/code&gt;, você pode realmente substituí-lo fornecendo uma lista personalizada de valores de parâmetros para a função &lt;code&gt;rmarkdown::render()&lt;/code&gt;. Por exemplo:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-{r&#34; data-lang=&#34;{r&#34;&gt;rmarkdown::render(&amp;quot;MyDocument.Rmd&amp;quot;, params = list(
  year = 2017,
  region = &amp;quot;Asia&amp;quot;,
  printcode = FALSE,
  file = &amp;quot;file2.csv&amp;quot;
))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Não temos que declarar explicitamente todos os parâmetros no argumento dos &lt;code&gt;params&lt;/code&gt;. Qualquer parâmetro não especificado terá como padrão os valores especificados nos metadados do &lt;code&gt;YAML&lt;/code&gt;. Por exemplo, a função a seguir somente anulará o parâmetro da região:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-{r&#34; data-lang=&#34;{r&#34;&gt;rmarkdown::render(&amp;quot;MyDocument.Rmd&amp;quot;, params = list(
  region = &amp;quot;Asia&amp;quot;
))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Você pode querer integrar estas mudanças em uma função. Tal função também poderia ser usada para criar um arquivo de saída com um nome de arquivo diferente para cada uma das diferentes combinações de parâmetros. No exemplo a seguir, um novo arquivo Report-region year.pdf é criado para cada conjunto de parâmetros:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-{r&#34; data-lang=&#34;{r&#34;&gt;render_report = function(region, year) {
  rmarkdown::render(
    &amp;quot;MyDocument.Rmd&amp;quot;, params = list(
      region = region,
      year = year
    ),
    output_file = paste0(&amp;quot;Report-&amp;quot;, region, &amp;quot;-&amp;quot;, year, &amp;quot;.pdf&amp;quot;)
  )
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;a-interface-interativa-ao-usuário&#34;&gt;A interface interativa ao usuário&lt;/h3&gt;
&lt;p&gt;Podemos usar uma interface gráfica de usuário (&lt;code&gt;GUI&lt;/code&gt;) baseada no &lt;code&gt;Shiny&lt;/code&gt; para inserir interativamente os parâmetros de um relatório. A interface de usuário pode ser chamada por &lt;code&gt;rmarkdown::render(&amp;quot;MyDocument.Rmd&amp;quot;, params = &amp;quot;ask&amp;quot;)&lt;/code&gt; ou clicando no menu suspenso atrás do botão &lt;code&gt;Knit&lt;/code&gt; e escolhendo &lt;code&gt;Knit with Parameters&lt;/code&gt; no RStudio. A Figura a seguir apresenta a &lt;code&gt;GUI&lt;/code&gt; do &lt;code&gt;rmarkdown&lt;/code&gt; solicitando parâmetros de entrada.&lt;/p&gt;
&lt;p&gt;Valores dos parâmetros de entrada interativamente para relatórios parametrizados.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/params-input.png&#34; alt=&#34;Valores dos parâmetros de entrada interativamente para relatórios parametrizados.&#34;&gt;&lt;/p&gt;
&lt;p&gt;Os controles de entrada para diferentes tipos de parâmetros podem ser personalizados, especificando subitens adicionais dentro da especificação do parâmetro em &lt;code&gt;YAML&lt;/code&gt;. Por exemplo, controles deslizantes, caixas de seleção e caixas de entrada de texto podem ser todos usados para controles de entrada.&lt;/p&gt;
&lt;p&gt;Além disso, também podemos especificar as restrições dos valores permitidos em cada parâmetro. Por exemplo, podemos querer que nosso modelo só seja executado durante anos entre 2010 e 2018. Isto é particularmente benéfico se você gostaria que outros usuários interagissem com o relatório, pois impede que os usuários tentem executar relatórios fora dos limites projetados.&lt;/p&gt;
&lt;p&gt;Adaptando nosso exemplo acima para incluir algumas configurações:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-{r&#34; data-lang=&#34;{r&#34;&gt;---
title: My Document
output: html_document
params:
  year:
    label: &amp;quot;Year&amp;quot;
    value: 2017
    input: slider
    min: 2010
    max: 2018
    step: 1
    sep: &amp;quot;&amp;quot;
  region:
    label: &amp;quot;Region:&amp;quot;
    value: Europe
    input: select
    choices: [North America, Europe, Asia, Africa]
  printcode:
    label: &amp;quot;Display Code:&amp;quot;
    value: TRUE
  data:
    label: &amp;quot;Input dataset:&amp;quot;
    value: results.csv
    input: file
---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Isto resulta na interface do usuário para os parâmetros.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/relements/figures/params-controls.png&#34; alt=&#34;Valores dos parâmetros de entrada interativamente para relatórios parametrizados.&#34;&gt;&lt;/p&gt;
&lt;p&gt;Controles personalizados para os parâmetros.
FIGURA 15.2: Controles personalizados para os parâmetros.&lt;/p&gt;
&lt;p&gt;O tipo de controle Brilhante utilizado é controlado pelo campo de entrada. A Tabela 15.1 mostra os tipos de entrada atualmente suportados (veja a página de ajuda da função Shiny associada para atributos adicionais que podem ser especificados para personalizar a entrada, por exemplo, ?shiny::checkboxInput).&lt;/p&gt;
&lt;p&gt;TABELA 15.1: Possíveis tipos de entrada e as funções Brilhantes associadas para relatórios parametrizados.
Input Type	Shiny Function
checkbox	checkboxInput
numeric	numericInput
slider	sliderInput
date	dateInput
text	textInput
file	fileInput
radio	radioButtons
select	selectInput
password	passwordInput&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Segmentação de mercado</title>
      <link>https://retaoliveira.github.io/cursos/intro_r/mkt_seg/</link>
      <pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://retaoliveira.github.io/cursos/intro_r/mkt_seg/</guid>
      <description>
&lt;script src=&#34;https://retaoliveira.github.io/places/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#funções&#34;&gt;Funções&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#normalização-minmax&#34;&gt;Normalização MinMax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#o-que-é-segmentação-de-mercado&#34;&gt;O que é segmentação de mercado?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#como-implementar-a-segmentação-de-clientes-no-r&#34;&gt;Como implementar a segmentação de clientes no R?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#visualização-de-gênero-do-cliente&#34;&gt;Visualização de gênero do cliente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#visualização-da-distribuição-etária&#34;&gt;Visualização da distribuição etária&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#análise-da-renda-anual-dos-clientes&#34;&gt;Análise da renda anual dos clientes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#análise-da-pontuação-de-gastos-dos-clientes&#34;&gt;Análise da pontuação de gastos dos clientes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#k-means-cluster-para-segmentação-de-mercado&#34;&gt;K-Means Cluster para segmentação de mercado&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#determinando-o-número-de-clusters-ótimos&#34;&gt;Determinando o número de clusters ótimos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#o-conjunto-de-agrupamentos-pode-ser-visualizado-por-meio-da-função&#34;&gt;O conjunto de agrupamentos pode ser visualizado por meio da função:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#relacionando-as-variáveis&#34;&gt;Relacionando as variáveis:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#síntese&#34;&gt;Síntese&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gmodels)
library(factoextra)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Carregando pacotes exigidos: ggplot2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Welcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(FactoMineR)
library(ggplot2)
library(ggcorrplot)
library(psych)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;psych&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:ggplot2&amp;#39;:
## 
##     %+%, alpha&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages --------------------------------------- tidyverse 1.3.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v tibble  3.1.4     v dplyr   1.0.7
## v tidyr   1.1.3     v stringr 1.4.0
## v readr   2.0.1     v forcats 0.5.1
## v purrr   0.3.4&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------ tidyverse_conflicts() --
## x psych::%+%()    masks ggplot2::%+%()
## x psych::alpha()  masks ggplot2::alpha()
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(outliers)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;outliers&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:psych&amp;#39;:
## 
##     outlier&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(hrbrthemes)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## NOTE: Either Arial Narrow or Roboto Condensed fonts are required to use these themes.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       Please use hrbrthemes::import_roboto_condensed() to install Roboto Condensed and&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       if Arial Narrow is not on your system, please see https://bit.ly/arialnarrow&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(dplyr)
library(plotly)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;plotly&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:ggplot2&amp;#39;:
## 
##     last_plot&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:graphics&amp;#39;:
## 
##     layout&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(viridis)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Carregando pacotes exigidos: viridisLite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(hrbrthemes)
library(knitr)
library(kableExtra)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;kableExtra&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:dplyr&amp;#39;:
## 
##     group_rows&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;funções&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Funções&lt;/h1&gt;
&lt;div id=&#34;normalização-minmax&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Normalização MinMax&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;norm_minmax &amp;lt;- function(x){
                           (x- min(x)) /(max(x)-min(x))
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;o-que-é-segmentação-de-mercado&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;O que é segmentação de mercado?&lt;/h1&gt;
&lt;p&gt;Segmentação de mercado é o processo de divisão da base de clientes em vários grupos de indivíduos que compartilham uma semelhança de diferentes maneiras que são relevantes para o marketing, tais como sexo, idade, interesses e hábitos de gastos diversos.&lt;/p&gt;
&lt;p&gt;As empresas que implantam a segmentação de clientes consideram que cada cliente tem requisitos diferentes e exigem um esforço de marketing específico para tratá-los adequadamente. As empresas visam obter uma abordagem mais profunda do cliente que estão almejando. Portanto, seu objetivo tem que ser específico e deve ser adaptado para atender às exigências individuais de cada cliente. Além disso, através dos dados coletados, as empresas podem obter uma compreensão mais profunda das preferências dos clientes, bem como os requisitos para descobrir segmentos valiosos que lhes proporcionariam o máximo lucro. Desta forma, elas podem estratificar suas técnicas de marketing de forma mais eficiente e minimizar a possibilidade de risco ao seu investimento.&lt;/p&gt;
&lt;p&gt;A técnica de segmentação de clientes depende de vários diferenciais-chave que dividem os clientes em grupos a serem analisados. Dados relacionados à demografia, geografia, status econômico, bem como padrões comportamentais, desempenham um papel crucial na determinação da direção da empresa em direção aos vários segmentos.&lt;/p&gt;
&lt;div id=&#34;como-implementar-a-segmentação-de-clientes-no-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Como implementar a segmentação de clientes no R?&lt;/h2&gt;
&lt;p&gt;Na primeira etapa deste projeto de ciência de dados, vamos realizar a exploração de dados. Importaremos os pacotes essenciais necessários para esta função e, em seguida, leremos nossos dados. Finalmente, analisaremos os dados de entrada para obter as informações necessárias.&lt;/p&gt;
&lt;p&gt;Salve o arquivo em &lt;a href=&#34;https://www.dropbox.com/s/yh1q8j7h7advv2h/mall.csv?dl=0&#34;&gt;mall.csv&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;customer_data=read_delim(&amp;quot;D:/Dropbox/Public/mall.csv&amp;quot;, delim = &amp;quot;;&amp;quot;, escape_double = FALSE, trim_ws = TRUE)

str(customer_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## spec_tbl_df [399 x 5] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
##  $ CustomerID            : num [1:399] 1 2 3 4 5 6 7 8 9 10 ...
##  $ Genre                 : chr [1:399] &amp;quot;Male&amp;quot; &amp;quot;Male&amp;quot; &amp;quot;Female&amp;quot; &amp;quot;Female&amp;quot; ...
##  $ Age                   : num [1:399] 19 21 20 23 31 22 35 23 64 30 ...
##  $ Annual Income (k$)    : num [1:399] 15 15 16 16 17 17 18 18 19 19 ...
##  $ Spending Score (1-100): num [1:399] 39 81 6 77 40 76 6 94 3 72 ...
##  - attr(*, &amp;quot;spec&amp;quot;)=
##   .. cols(
##   ..   CustomerID = col_double(),
##   ..   Genre = col_character(),
##   ..   Age = col_double(),
##   ..   `Annual Income (k$)` = col_double(),
##   ..   `Spending Score (1-100)` = col_double()
##   .. )
##  - attr(*, &amp;quot;problems&amp;quot;)=&amp;lt;externalptr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(customer_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;CustomerID&amp;quot;             &amp;quot;Genre&amp;quot;                  &amp;quot;Age&amp;quot;                   
## [4] &amp;quot;Annual Income (k$)&amp;quot;     &amp;quot;Spending Score (1-100)&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Temos uma variável que é uma identificação do consumidor, uma variável de gênero, uma de idade, outra de renda anual em k$ e um score de gastos que varia entre 1 e 100.&lt;/p&gt;
&lt;p&gt;Vamos agora exibir as primeiras seis linhas de nosso conjunto de dados usando a função head() e usar a função summary() para emitir o resumo do mesmo.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(customer_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 5
##   CustomerID Genre    Age `Annual Income (k$)` `Spending Score (1-100)`
##        &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt;                &amp;lt;dbl&amp;gt;                    &amp;lt;dbl&amp;gt;
## 1          1 Male      19                   15                       39
## 2          2 Male      21                   15                       81
## 3          3 Female    20                   16                        6
## 4          4 Female    23                   16                       77
## 5          5 Female    31                   17                       40
## 6          6 Female    22                   17                       76&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(customer_data$Age)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   18.00   28.50   36.00   38.87   49.00   70.00&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sd(customer_data$Age)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 13.96194&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(customer_data$Annual.Income..k..)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Length  Class   Mode 
##      0   NULL   NULL&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sd(customer_data$Annual.Income..k..)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(customer_data$Age)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   18.00   28.50   36.00   38.87   49.00   70.00&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sd(customer_data$Spending.Score..1.100.)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] NA&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Faça uma interpretação das variáveis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;visualização-de-gênero-do-cliente&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Visualização de gênero do cliente&lt;/h1&gt;
&lt;p&gt;Criaremos um barplot para mostrar a distribuição de gênero em nosso conjunto de dados de clientes_dados.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- table(customer_data$Genre)

ggplot(customer_data, aes(x = Genre)) +
  geom_bar(fill=&amp;quot;red&amp;quot;) +
  ggtitle(&amp;quot;Usando o BarPlot para exibir a comparação de gênero&amp;quot;) +
  theme_ipsum() +
  labs(x = &amp;quot;Gênero&amp;quot;, y = &amp;quot;Número de ocorrências&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Pelo gráfico acima, observamos que o número de mulheres é maior do que o de homens.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;visualização-da-distribuição-etária&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Visualização da distribuição etária&lt;/h1&gt;
&lt;p&gt;Vamos traçar um histograma para visualizar a distribuição e traçar a freqüência das idades dos clientes. Primeiramente, procederemos com um resumo da variável Idade.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(customer_data$Age)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   18.00   28.50   36.00   38.87   49.00   70.00&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(customer_data, aes(x = Age)) +
  geom_histogram(binwidth = 5) +
  theme_ipsum() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(customer_data$Age,
       col=&amp;quot;#ff0066&amp;quot;,
       main=&amp;quot;Boxplot for Descriptive Analysis of Age&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(customer_data, aes(y = Age)) +
  geom_boxplot(fill=&amp;quot;#ff0066&amp;quot;) +
  theme_ipsum() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A partir das duas visualizações acima, concluímos que a idade mediana do cliente está entre 30 e 35 anos. A idade mínima dos clientes é 18 anos, enquanto que a idade máxima é 70 anos.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;análise-da-renda-anual-dos-clientes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Análise da renda anual dos clientes&lt;/h1&gt;
&lt;p&gt;Nesta seção do projeto R, vamos criar visualizações para analisar a renda anual dos clientes. Traçaremos um histograma e então procederemos a examinar estes dados usando um gráfico de densidade.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(customer_data$`Annual Income (k$)`)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   15.00   41.00   61.00   60.37   78.00  137.00&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(customer_data) +
  geom_histogram(aes(x = `Annual Income (k$)`), binwidth = 10, fill = &amp;quot;#660033&amp;quot;) +
  theme_ipsum() +
  ggtitle(&amp;quot;Histogram for Annual Income&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(customer_data) +
  geom_density(aes(x = `Annual Income (k$)`), fill=&amp;quot;#69b3a2&amp;quot;, color=&amp;quot;#e9ecef&amp;quot;, alpha=0.8) +
  theme_ipsum() +
  ggtitle(&amp;quot;Histogram for Annual Income&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Da análise descritiva acima, concluímos que a renda mínima anual dos clientes é de 15 e a máxima renda é de 137 mil $ anuais. As pessoas que ganham uma renda média de 70 têm a maior contagem de freqüência em nossa distribuição de histogramas. O salário médio de todos os clientes é de 60,56.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;análise-da-pontuação-de-gastos-dos-clientes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Análise da pontuação de gastos dos clientes&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(customer_data$`Spending Score (1-100)`)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##    1.00   34.50   50.00   50.12   73.00   99.00&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(customer_data, aes(y = `Spending Score (1-100)`)) +
  geom_boxplot(fill=&amp;quot;#ff0066&amp;quot;) +
  theme_ipsum() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(customer_data) +
  geom_histogram(aes(x = `Spending Score (1-100)`), binwidth = 10, fill = &amp;quot;#660033&amp;quot;) +
  theme_ipsum() +
  ggtitle(&amp;quot;HistoGgram for Spending Score&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Podemos ver que a Análise Descritiva da Pontuação de Gastos é que Min é 1, Max é 99 e a média é 50,20. Pelo histograma, concluímos que os clientes entre as classes 40 e 50 são os mais frequentes entre todas as classes.&lt;/p&gt;
&lt;div id=&#34;k-means-cluster-para-segmentação-de-mercado&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;K-Means Cluster para segmentação de mercado&lt;/h2&gt;
&lt;p&gt;Ao utilizar o algoritmo K-Means clustering, o primeiro passo é indicar o número de clusters (k) que desejamos produzir. O algoritmo começa com a seleção aleatória de &lt;code&gt;k&lt;/code&gt; objetos do conjunto de dados que servirão como os centros iniciais de nossos clusters.&lt;/p&gt;
&lt;p&gt;Estes objetos selecionados são os meios de agrupamento, também conhecidos como centroides. Então, os objetos restantes são atribuídos aos centróides mais próximos. Esses centróides são definidos pela Distância Euclidiana presente entre o objeto e o cluster. Nos referimos a esta etapa como “atribuição de agrupamento”.&lt;/p&gt;
&lt;p&gt;Quando a atribuição é concluída, o algoritmo procede para calcular o novo valor médio de cada agrupamento presente nos dados. Após o recálculo dos centros, as observações são verificadas, identificando se elas estão mais próximas de um agrupamento diferente. Usando a média atualizada do cluster, os objetos passam por uma reatribuição. Isto passa repetidamente por várias iterações até que as atribuições de agrupamento parem de se alterar. Os clusters que estão presentes na iteração atual são os mesmos que foram obtidos na iteração anterior.&lt;/p&gt;
&lt;div id=&#34;determinando-o-número-de-clusters-ótimos&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Determinando o número de clusters ótimos&lt;/h3&gt;
&lt;p&gt;Ao trabalhar com clusters, é preciso especificar o número de clusters a serem utilizados. Para ajudá-lo a determinar os clusters ideais, há três métodos populares. Consideraremos o método de cotovelo.&lt;/p&gt;
&lt;p&gt;O principal objetivo por trás de métodos de partição de clusters como o K-Means é definir os clusters de forma que a variação intra-cluster permaneça mínima.&lt;/p&gt;
&lt;p&gt;No R, é possível implementar essa análise por meio da função a seguir.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- customer_data %&amp;gt;% 
  mutate(Genre = ifelse(Genre == &amp;quot;Male&amp;quot;, 1, 2)) %&amp;gt;% 
  select(&amp;quot;Genre&amp;quot;, &amp;quot;Age&amp;quot;, `Annual Income (k$)`, `Spending Score (1-100)`)
  
fviz_nbclust(df, kmeans, method = &amp;quot;wss&amp;quot;)+
  geom_vline(xintercept = 6, linetype = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Do gráfico acima, concluímos que 6 é um número apropriado de clusters.&lt;/p&gt;
&lt;p&gt;Usando a função &lt;code&gt;fviz_nbclust()&lt;/code&gt;, é possível determinar e visualizar o número ideal de clusters por meio do método da silhueta:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(NbClust)
library(factoextra)

fviz_nbclust(customer_data[,3:5], kmeans, method = &amp;quot;silhouette&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Agora, tomemos k = 6 como nosso número de clusters inicial.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(12345)
km.res &amp;lt;- kmeans(df, 6, nstart=25)
print(km.res)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## K-means clustering with 6 clusters of sizes 77, 44, 70, 44, 76, 88
## 
## Cluster means:
##      Genre      Age Annual Income (k$) Spending Score (1-100)
## 1 1.545455 32.72727           85.88312               82.11688
## 2 1.590909 25.27273           25.72727               79.36364
## 3 1.428571 41.68571           88.22857               17.28571
## 4 1.590909 44.31818           25.77273               20.27273
## 5 1.657895 27.00000           56.65789               49.13158
## 6 1.568182 56.34091           53.70455               49.38636
## 
## Clustering vector:
##   [1] 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4
##  [38] 2 4 2 6 2 4 5 4 2 6 5 5 5 6 5 5 6 6 6 6 6 5 6 6 5 6 6 6 5 6 6 5 5 6 6 6 6
##  [75] 6 5 6 5 5 6 6 5 6 6 5 6 6 5 5 6 6 5 6 5 5 5 6 5 6 5 5 6 6 5 6 5 6 6 6 6 6
## [112] 5 5 5 5 5 6 6 6 6 5 5 5 1 5 1 3 1 3 1 3 1 5 1 3 1 3 1 3 1 3 1 5 1 3 1 3 1
## [149] 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3
## [186] 1 3 1 3 1 3 1 3 1 3 1 3 1 3 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4
## [223] 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 6 2 4 5 4 2 6 5 5 5 6 5 5 6 6 6 6 6 5 6
## [260] 6 5 6 6 6 5 6 6 5 5 6 6 6 6 6 5 6 5 5 6 6 5 6 6 5 6 6 5 5 6 6 5 6 5 5 5 6
## [297] 5 6 5 5 6 6 5 6 5 6 6 6 6 6 5 5 5 5 5 6 6 6 6 5 5 5 1 5 1 3 1 3 1 3 1 5 1
## [334] 3 1 3 1 3 1 3 1 5 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3
## [371] 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1
## 
## Within cluster sum of squares by cluster:
## [1] 25376.260  8210.273 33398.857 16388.636 15502.895 15236.545
##  (between_SS / total_SS =  81.3 %)
## 
## Available components:
## 
## [1] &amp;quot;cluster&amp;quot;      &amp;quot;centers&amp;quot;      &amp;quot;totss&amp;quot;        &amp;quot;withinss&amp;quot;     &amp;quot;tot.withinss&amp;quot;
## [6] &amp;quot;betweenss&amp;quot;    &amp;quot;size&amp;quot;         &amp;quot;iter&amp;quot;         &amp;quot;ifault&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Na saída de nossa operação de kmeans, observamos uma lista com várias informações-chave. A partir daí, concluímos que as informações úteis são:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cluster - Este é um vetor de vários inteiros que denotam o cluster que tem uma alocação de cada ponto.+&lt;/li&gt;
&lt;li&gt;totss - Isto representa a soma total dos quadrados.&lt;/li&gt;
&lt;li&gt;centers - Matriz composta de vários centros de agrupamento&lt;/li&gt;
&lt;li&gt;withinss - Este é um vetor que representa a soma intra-cluster dos quadrados tendo um componente por cluster.&lt;/li&gt;
&lt;li&gt;tot.withinss - Denota a soma total intra-cluster de quadrados.&lt;/li&gt;
&lt;li&gt;betweenss - Esta é a soma dos quadrados entre os quadrados de um cluster.&lt;/li&gt;
&lt;li&gt;size - O número total de pontos que cada aglomerado possui.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As médias das variáveis para os agrupamentos podem ser obtidas por meio da função:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cluster_result &amp;lt;- aggregate(df, by=list(cluster=km.res$cluster), mean)
cluster_result&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   cluster    Genre      Age Annual Income (k$) Spending Score (1-100)
## 1       1 1.545455 32.72727           85.88312               82.11688
## 2       2 1.590909 25.27273           25.72727               79.36364
## 3       3 1.428571 41.68571           88.22857               17.28571
## 4       4 1.590909 44.31818           25.77273               20.27273
## 5       5 1.657895 27.00000           56.65789               49.13158
## 6       6 1.568182 56.34091           53.70455               49.38636&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;o-conjunto-de-agrupamentos-pode-ser-visualizado-por-meio-da-função&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;O conjunto de agrupamentos pode ser visualizado por meio da função:&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df2 &amp;lt;- cbind(df, cluster=km.res$cluster)

km.res$centers&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      Genre      Age Annual Income (k$) Spending Score (1-100)
## 1 1.545455 32.72727           85.88312               82.11688
## 2 1.590909 25.27273           25.72727               79.36364
## 3 1.428571 41.68571           88.22857               17.28571
## 4 1.590909 44.31818           25.77273               20.27273
## 5 1.657895 27.00000           56.65789               49.13158
## 6 1.568182 56.34091           53.70455               49.38636&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- fviz_cluster(km.res, data=df2,
             palette = c(&amp;quot;#2E9FDF&amp;quot;, &amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;, &amp;quot;#FC4E07&amp;quot;, &amp;quot;#E46726&amp;quot;, &amp;quot;#6D9EC1&amp;quot;),
             #ellipse.type=&amp;quot;euclid&amp;quot;,
             star.plot=TRUE,
             repel=TRUE)

a + theme_ipsum()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;relacionando-as-variáveis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Relacionando as variáveis:&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df2, aes(x =`Annual Income (k$)`, y = `Spending Score (1-100)`)) + 
  geom_point(stat = &amp;quot;identity&amp;quot;, aes(color = as.factor(cluster))) +
  scale_color_discrete(name=&amp;quot; &amp;quot;,
              breaks=c(&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;5&amp;quot;,&amp;quot;6&amp;quot;),
              labels=c(&amp;quot;Cluster 1&amp;quot;, &amp;quot;Cluster 2&amp;quot;, &amp;quot;Cluster 3&amp;quot;, &amp;quot;Cluster 4&amp;quot;, &amp;quot;Cluster 5&amp;quot;,&amp;quot;Cluster 6&amp;quot;)) +
  ggtitle(&amp;quot;Segments of Mall Customers&amp;quot;, subtitle = &amp;quot;Using K-means Clustering&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://retaoliveira.github.io/places/conteudo/intro_r/mkt_seg_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Complete a análise a seguir identificando os agrupamentos:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Da visualização acima, observamos que há uma distribuição de 6 clusters como segue:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Cluster ___ e ___ - Estes clusters representam os dados do cliente com o salário médio de renda, bem como o gasto médio anual de salário.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cluster ___ - Este cluster representa o cliente_dados com uma alta renda anual, bem como um alto gasto anual.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cluster ___ - Este grupo denota os dados do cliente com baixa renda anual, bem como o baixo gasto anual de renda.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cluster ___ - Este cluster denota uma alta renda anual e um baixo gasto anual.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cluster ___ - Este cluster representa uma baixa renda anual, mas seu alto gasto anual.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Com a ajuda do clustering, podemos compreender muito melhor as variáveis, o que nos leva a tomar decisões cuidadosas. Com a identificação dos clientes, as empresas podem lançar produtos e serviços que visam clientes com base em vários parâmetros como renda, idade, padrões de gastos, etc. Além disso, padrões mais complexos, como revisões de produtos, são levados em consideração para melhor segmentação.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;síntese&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Síntese&lt;/h2&gt;
&lt;p&gt;Neste projeto de ciência de dados, passamos pelo modelo de segmentação do cliente. Desenvolvemos isto por meio de um algoritmo de clustering chamado K-means clustering. Analisamos e visualizamos os dados e depois procedemos à implementação de nosso algoritmo.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Créditos&lt;/em&gt;&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://data-flair.training/blogs/r-data-science-project-customer-segmentation/&#34;&gt;Projeto Data Science - Segmentação de clientes usando o aprendizado de máquinas em R&lt;/a&gt;&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
